{
  "total_count": 23,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8544",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8544/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8544/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8544/events",
      "html_url": "https://github.com/docker/compose/issues/8544",
      "id": 986462143,
      "node_id": "MDU6SXNzdWU5ODY0NjIxNDM=",
      "number": 8544,
      "title": "docker --context remotehost compose up -d shows WARN[0006] commandConn.CloseWrite",
      "user": {
        "login": "StefanScherer",
        "id": 207759,
        "node_id": "MDQ6VXNlcjIwNzc1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/207759?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/StefanScherer",
        "html_url": "https://github.com/StefanScherer",
        "followers_url": "https://api.github.com/users/StefanScherer/followers",
        "following_url": "https://api.github.com/users/StefanScherer/following{/other_user}",
        "gists_url": "https://api.github.com/users/StefanScherer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/StefanScherer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/StefanScherer/subscriptions",
        "organizations_url": "https://api.github.com/users/StefanScherer/orgs",
        "repos_url": "https://api.github.com/users/StefanScherer/repos",
        "events_url": "https://api.github.com/users/StefanScherer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/StefanScherer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3313137385,
          "node_id": "MDU6TGFiZWwzMzEzMTM3Mzg1",
          "url": "https://api.github.com/repos/docker/compose/labels/Docker%20Compose%20V2",
          "name": "Docker Compose V2",
          "color": "1D76DB",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-05-12T11:55:46Z",
      "updated_at": "2021-09-02T09:43:28Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "\r\n**Description**\r\n\r\nI tried `docker compose up` with an SSH remote context. A warning appear on each `up` command when using such a remote context.\r\nOther commands like `docker --context remotehost compose ps` or `docker --context remotehost compose down` work fine without this warning.\r\n\r\n**Steps to reproduce the issue:**\r\n1. `docker context create remotehost --docker \"host=ssh://user@remotehost\"`\r\n2. `docker --context remotehost compose up -d`\r\n3.\r\n\r\n**Describe the results you received:**\r\n\r\n```\r\n$ docker --context remotehost compose up -d\r\nWARN[0006] commandConn.CloseWrite: commandconn: failed to wait: signal: killed \r\n...\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nThe warning shouldn't appear.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\n$ docker version\r\nClient:\r\n Cloud integration: 1.0.14\r\n Version:           20.10.6\r\n API version:       1.41\r\n Go version:        go1.16.3\r\n Git commit:        370c289\r\n Built:             Fri Apr  9 22:46:57 2021\r\n OS/Arch:           darwin/arm64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.6\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8728dd2\r\n  Built:            Fri Apr  9 22:44:13 2021\r\n  OS/Arch:          linux/arm64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.4\r\n  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc:\r\n  Version:          1.0.0-rc93\r\n  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker context show`:**  \r\nYou can also run `docker context inspect context-name` to give us more details but don't forget to remove sensitive content.\r\n\r\n```\r\ndefault\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\n$ docker info\r\nClient:\r\n Context:    default\r\n Debug Mode: false\r\n Plugins:\r\n  app: Docker App (Docker Inc., v0.9.1-beta3)\r\n  buildx: Build with BuildKit (Docker Inc., v0.5.1-docker)\r\n  compose: Docker Compose (Docker Inc., 2.0.0-beta.1)\r\n  scan: Docker Scan (Docker Inc., v0.8.0)\r\n\r\nServer:\r\n Containers: 0\r\n  Running: 0\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 3\r\n Server Version: 20.10.6\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n  userxattr: false\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Cgroup Version: 1\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc version: 12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n init version: de40ad0\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.10.25-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: aarch64\r\n CPUs: 4\r\n Total Memory: 1.942GiB\r\n Name: docker-desktop\r\n ID: P7BD:XDIY:BKCQ:7BID:S55U:Y7Q6:5AYS:W2WZ:KL2R:HULO:I5S6:HIBD\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: http.docker.internal:3128\r\n HTTPS Proxy: http.docker.internal:3128\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS ECS, Azure ACI, local, etc.):**\r\n\r\nTarget machine is an AWS t4g ARM64 machine, but it also happened connection to a local Rasperry Pi ARM64 ubuntu box.\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8367",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8367/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8367/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8367/events",
      "html_url": "https://github.com/docker/compose/issues/8367",
      "id": 910642466,
      "node_id": "MDU6SXNzdWU5MTA2NDI0NjY=",
      "number": 8367,
      "title": "docker-compose stopped remotely updating the running containers with up --build command",
      "user": {
        "login": "smartFunX",
        "id": 445166,
        "node_id": "MDQ6VXNlcjQ0NTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/445166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smartFunX",
        "html_url": "https://github.com/smartFunX",
        "followers_url": "https://api.github.com/users/smartFunX/followers",
        "following_url": "https://api.github.com/users/smartFunX/following{/other_user}",
        "gists_url": "https://api.github.com/users/smartFunX/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/smartFunX/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smartFunX/subscriptions",
        "organizations_url": "https://api.github.com/users/smartFunX/orgs",
        "repos_url": "https://api.github.com/users/smartFunX/repos",
        "events_url": "https://api.github.com/users/smartFunX/events{/privacy}",
        "received_events_url": "https://api.github.com/users/smartFunX/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-06-03T16:05:05Z",
      "updated_at": "2021-07-14T00:43:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "\r\n## Description of the issue\r\n\r\nStarting from MacOS Docker Engine 20.10.3, docker-compose stopped remotely updating the running containers while running command:\r\ndocker-compose -H \"ssh://...\" up -d --build\r\n\r\nInstead it builds and saves the image locally.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.29.1, build c34c88b2\r\ndocker-py version: 5.0.0\r\nCPython version: 3.9.0\r\nOpenSSL version: OpenSSL 1.1.1h  22 Sep 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Cloud integration: 1.0.14\r\n Version:           20.10.6\r\n API version:       1.41\r\n Go version:        go1.16.3\r\n Git commit:        370c289\r\n Built:             Fri Apr  9 22:46:57 2021\r\n OS/Arch:           darwin/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.6\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8728dd2\r\n  Built:            Fri Apr  9 22:44:56 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.4\r\n  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc:\r\n  Version:          1.0.0-rc93\r\n  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nnetworks:\r\n  docker-network:\r\n    external: true\r\n    name: docker-network\r\nservices:\r\n  vis-app:\r\n    build:\r\n      context: /Users/user/data_visualizer\r\n    environment:\r\n      NODE_ENV: production\r\n    extra_hosts:\r\n    - host.docker.internal:host-gateway\r\n    networks:\r\n      docker-network:\r\n        aliases:\r\n        - vis-app\r\n    ports:\r\n    - published: 8084\r\n      target: 8084\r\n    restart: always\r\nversion: '3.9'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Run: docker-compose -H \"ssh://...\" up -d --build\r\n\r\n### Observed result\r\nDocker compose just builds an image, but saves it locally and doesn't bring it up on the remote server.\r\n\r\n### Expected result\r\n\r\nDocker should restart the remote containers with the latest built image.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n[+] Building 193.9s (15/15) FINISHED\r\n => [internal] load build definition from Dockerfile                                                                                                                                                       0.0s\r\n => => transferring dockerfile: 40B                                                                                                                                                                        0.0s\r\n => [internal] load .dockerignore                                                                                                                                                                          0.0s\r\n => => transferring context: 34B                                                                                                                                                                           0.0s\r\n => [internal] load metadata for docker.io/library/node:12                                                                                                                                                 1.2s\r\n => [frontend 1/5] FROM docker.io/library/node:12@sha256:0d6b3522991d04ead0b119feaffafa6a8cd1b374218e9f997a1d4753b7064882                                                                                  0.0s\r\n => [internal] load build context                                                                                                                                                                          0.1s\r\n => => transferring context: 56.66kB                                                                                                                                                                       0.1s\r\n => CACHED [frontend 2/5] WORKDIR /tmp/react-app/                                                                                                                                                          0.0s\r\n => [frontend 3/5] COPY . .                                                                                                                                                                                0.2s\r\n => CACHED [stage-1 2/6] WORKDIR /usr/src/app                                                                                                                                                              0.0s\r\n => CACHED [stage-1 3/6] COPY server/package*.json ./                                                                                                                                                      0.0s\r\n => CACHED [stage-1 4/6] RUN npm install                                                                                                                                                                   0.0s\r\n => [stage-1 5/6] COPY server/ .                                                                                                                                                                           0.1s\r\n => [frontend 4/5] RUN npm install                                                                                                                                                                        78.8s\r\n => [frontend 5/5] RUN npm run build                                                                                                                                                                     108.1s\r\n => [stage-1 6/6] COPY --from=frontend /tmp/react-app/build ./build/                                                                                                                                       0.1s\r\n => exporting to image                                                                                                                                                                                     0.1s\r\n => => exporting layers                                                                                                                                                                                    0.1s\r\n => => writing image sha256:4af20e91adb333278e869522da4461d131ce6363d7d2183bd376bfeeacc8aa70                                                                                                               0.0s\r\n => => naming to docker.io/library/data_visualizer_vis-app                                                                                                                                           0.0s\r\nSuccessfully built 4af20e91adb333278e869522da4461d131ce6363d7d2183bd376bfeeacc8aa70\r\ndata_visualizer_vis-app_1 is up-to-date\r\n```\r\n\r\n## Additional information\r\n\r\nMacOS Docker Engine version 20.10.3 and higher is affected.\r\nWorks well on 20.10.2 and lower.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7942",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7942/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7942/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7942/events",
      "html_url": "https://github.com/docker/compose/issues/7942",
      "id": 750615207,
      "node_id": "MDU6SXNzdWU3NTA2MTUyMDc=",
      "number": 7942,
      "title": "How to run some commands/scripts when stopping docker-compose",
      "user": {
        "login": "alanwilter",
        "id": 3899850,
        "node_id": "MDQ6VXNlcjM4OTk4NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3899850?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alanwilter",
        "html_url": "https://github.com/alanwilter",
        "followers_url": "https://api.github.com/users/alanwilter/followers",
        "following_url": "https://api.github.com/users/alanwilter/following{/other_user}",
        "gists_url": "https://api.github.com/users/alanwilter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alanwilter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alanwilter/subscriptions",
        "organizations_url": "https://api.github.com/users/alanwilter/orgs",
        "repos_url": "https://api.github.com/users/alanwilter/repos",
        "events_url": "https://api.github.com/users/alanwilter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alanwilter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 153640415,
          "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/feature",
          "name": "kind/feature",
          "color": "bfd4f2",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-11-25T08:43:36Z",
      "updated_at": "2020-11-26T16:50:36Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "The problem that brought me here is described here\r\nhttps://stackoverflow.com/questions/64992099/how-to-run-a-closing-script-when-issuing-docker-compose-stop-or-crtl-c\r\n\r\nEssentially, I'm not finding a solution where doing `ctrl-c` in a session started with `docker-compose up` or, from another terminal, `docker-compose stop/down`, I'd like to run few commands or scripts before seeing\r\n```bash\r\n...\r\nfrontend_1  |\r\n^CGracefully stopping... (press Ctrl+C again to force)\r\nStopping app_browser_frontend_1   ... done\r\n```",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8520",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8520/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8520/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8520/events",
      "html_url": "https://github.com/docker/compose/issues/8520",
      "id": 986427751,
      "node_id": "MDU6SXNzdWU5ODY0Mjc3NTE=",
      "number": 8520,
      "title": "Docker compose no longer properly build image with relative path context",
      "user": {
        "login": "cchantep",
        "id": 166062,
        "node_id": "MDQ6VXNlcjE2NjA2Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/166062?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cchantep",
        "html_url": "https://github.com/cchantep",
        "followers_url": "https://api.github.com/users/cchantep/followers",
        "following_url": "https://api.github.com/users/cchantep/following{/other_user}",
        "gists_url": "https://api.github.com/users/cchantep/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cchantep/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cchantep/subscriptions",
        "organizations_url": "https://api.github.com/users/cchantep/orgs",
        "repos_url": "https://api.github.com/users/cchantep/repos",
        "events_url": "https://api.github.com/users/cchantep/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cchantep/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3313137385,
          "node_id": "MDU6TGFiZWwzMzEzMTM3Mzg1",
          "url": "https://api.github.com/repos/docker/compose/labels/Docker%20Compose%20V2",
          "name": "Docker Compose V2",
          "color": "1D76DB",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-07-03T20:16:23Z",
      "updated_at": "2021-09-06T06:12:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "### Expected behavior\r\n\r\nPreviously working fine:\r\n\r\n    API_VERSION=1.2.3 docker-compose -f docker-compose.yml up app\r\n\r\nBuild missing images and run the containers\r\n\r\n### Actual behavior\r\n\r\nFails to build images according dependencies:\r\n\r\n```\r\n[+] Running 0/2\r\n ⠿ jdk-base Error                                                                                                      1.8s\r\n ⠿ app Error                                                                                                           1.8s\r\n[+] Building 1.5s (10/10) FINISHED                                                                                          \r\n => [foo/openjdk8:0.1 internal] load build definition from openjdk8-dockerfile                                        0.0s\r\n => => transferring dockerfile: 137B                                                                                   0.0s\r\n => [foo/openjdk8:0.1 internal] load .dockerignore                                                                    0.0s\r\n => => transferring context: 2B                                                                                        0.0s\r\n => [foo/api:1.11.7-799a61c-SNAPSHOTqa internal] load build definition from Dockerfile                                0.0s\r\n => => transferring dockerfile: 127B                                                                                   0.0s\r\n => [foo/api:1.11.7-799a61c-SNAPSHOTqa internal] load .dockerignore                                                   0.0s\r\n => => transferring context: 2B                                                                                        0.0s\r\n => [foo/openjdk8:0.1 internal] load metadata for docker.io/adoptopenjdk/openjdk8:jdk8u265-b01-alpine-slim            0.5s\r\n => ERROR [foo/api:1.11.7-799a61c-SNAPSHOTqa internal] load metadata for docker.io/foo/openjdk8:0.1                  1.2s\r\n => [auth] foo/openjdk8:pull token for registry-1.docker.io                                                           0.0s\r\n => [foo/openjdk8:0.1 1/2] FROM docker.io/adoptopenjdk/openjdk8:jdk8u265-b01-alpine-slim@sha256:82df3776201035da0045  0.0s\r\n => CACHED [foo/openjdk8:0.1 2/2] RUN apk update && apk add --no-cache tzdata curl bash && cp /usr/share/zoneinfo/Eu  0.0s\r\n => [foo/openjdk8:0.1] exporting to image                                                                             0.0s\r\n => => exporting layers                                                                                                0.0s\r\n => => writing image sha256:e5a12a865e9c8491f9637654f50d5b10266d30777916935ab0c39387a89f70b8                           0.0s\r\n => => naming to docker.io/foo/openjdk8:0.1                                                                           0.0s\r\n------\r\n > [foo/api:1.11.7-799a61c-SNAPSHOTqa internal] load metadata for docker.io/foo/openjdk8:0.1:\r\n------\r\nfailed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: pull access denied, repository does not exist or may require authorization: fooer message: insufficient_scope: authorization failed\r\n```\r\n\r\n### Information\r\n\r\n- OS: 10.15.7\r\n- CPU: Intel i7\r\n- Docker Desktop version: 3.5.1\r\n- Docker compose: 2.0.0-beta.4\r\n\r\n### Steps to reproduce the behavior\r\n\r\nCreate the following files:\r\n\r\n```\r\n|\r\nL__tooling/\r\n   L__docker/\r\n        L__docker-compose.yml\r\n        L__openjdk8-dockerfile\r\n:\r\nL__api\r\n     L__tooling\r\n          L__docker\r\n               L__Dockerfile\r\n```\r\n\r\nFile `tooling/docker/docker-compose.yml`:\r\n\r\n```yaml\r\nversion: \"3.9\"\r\n\r\nservices:\r\n  jdk-base: # Only to make sure the base image is available then\r\n    image: foo/openjdk8:0.1\r\n    build:\r\n      context: .\r\n      dockerfile: openjdk8-dockerfile\r\n\r\n  app:\r\n    depends_on:\r\n      - jdk-base\r\n    image: foo/api:${API_VERSION}qa\r\n    build:\r\n      context: ../../api/tooling/docker\r\n```\r\n\r\nFile `tooling/docker/openjdk8-dockerfile`:\r\n\r\n```\r\nFROM adoptopenjdk/openjdk8:jdk8u265-b01-alpine-slim\r\n\r\nRUN apk update && \\\r\napk add --no-cache tzdata curl bash\r\n```\r\n\r\nFile `api/tooling/docker/Dockerfile`:\r\n\r\n```\r\nFROM serv/openjdk8:0.1\r\n\r\nRUN echo 'ok'\r\n```\r\n\r\n🖐️ If moving `api/tooling/docker` inside the directory where `docker-compose.yml` is (that is to say `tooling/docker`) it's working: `mv api/tooling/docker tooling/docker/api` + edit `docker-compose.yml` as below.\r\n\r\n```yaml\r\nversion: \"3.9\"\r\n\r\nservices:\r\n  jdk-base: # Only to make sure the base image is available then\r\n    image: foo/openjdk8:0.1\r\n    build:\r\n      context: .\r\n      dockerfile: openjdk8-dockerfile\r\n\r\n  app:\r\n    depends_on:\r\n      - jdk-base\r\n    image: foo/api:${API_VERSION}qa\r\n    build:\r\n      context: api\r\n```",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8300",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8300/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8300/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8300/events",
      "html_url": "https://github.com/docker/compose/issues/8300",
      "id": 867499800,
      "node_id": "MDU6SXNzdWU4Njc0OTk4MDA=",
      "number": 8300,
      "title": "extra_host will be wrongly overwritten",
      "user": {
        "login": "cstoehr",
        "id": 9281177,
        "node_id": "MDQ6VXNlcjkyODExNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9281177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cstoehr",
        "html_url": "https://github.com/cstoehr",
        "followers_url": "https://api.github.com/users/cstoehr/followers",
        "following_url": "https://api.github.com/users/cstoehr/following{/other_user}",
        "gists_url": "https://api.github.com/users/cstoehr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cstoehr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cstoehr/subscriptions",
        "organizations_url": "https://api.github.com/users/cstoehr/orgs",
        "repos_url": "https://api.github.com/users/cstoehr/repos",
        "events_url": "https://api.github.com/users/cstoehr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cstoehr/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-04-26T09:43:24Z",
      "updated_at": "2021-04-26T10:07:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Description of the issue\r\nif you merge 2 or more docker_compose files then the extra_hosts will be wrongly overwritten.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.29.1, build c34c88b2\r\ndocker-py version: 5.0.0\r\nCPython version: 3.7.10\r\nOpenSSL version: OpenSSL 1.1.0l  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           20.10.6\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        370c289\r\n Built:             Fri Apr  9 22:47:17 2021\r\n OS/Arch:           linux/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.6\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8728dd2\r\n  Built:            Fri Apr  9 22:45:28 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.4\r\n  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc:\r\n  Version:          1.0.0-rc93\r\n  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nit changed see below\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. create 2 docker-compose files\r\n\r\nDockerfile 1:\r\n```\r\nversion: '3.6'\r\nservices:\r\n  frontend:\r\n    extra_hosts:\r\n      - \"dev.local:192.168.2.2\"\r\n      - \"npm.dev.local:192.168.2.3\"\r\n    build:\r\n      context: build/docker\r\n      dockerfile: frontendTest/Dockerfile\r\n      args:\r\n        test: 2\r\n```\r\nDockerfile 2:\r\n```\r\nversion: '3.6'\r\n\r\nservices:\r\n  frontend:\r\n    build:\r\n      args:\r\n        test: 1\r\n```\r\n\r\n2. Run: $ ```docker-compose -f docker-compose.1.yml config```\r\n\r\n```\r\nservices:\r\n  frontend:\r\n    build:\r\n      args:\r\n        test: '2'\r\n      context: /home/stoehrc/Dokumente/Projekte/products/lbs.de/diva-e/webapp-builder/build/docker\r\n      dockerfile: frontendTest/Dockerfile\r\n    extra_hosts:\r\n    - dev.local:192.168.2.2\r\n    - npm.dev.local:192.168.2.3\r\nversion: '3.6'\r\n```\r\n3. Run: ```docker-compose -f docker-compose.1.yml -f docker-compose.2.yml  config```\r\n```\r\nservices:\r\n  frontend:\r\n    build:\r\n      args:\r\n        test: '1'\r\n      context: .\r\n      dockerfile: frontendTest/Dockerfile\r\n    extra_hosts:\r\n      dev.local: 192.168.2.2\r\n      npm.dev.local: 192.168.2.3\r\nversion: '3.6'\r\n```\r\n\r\n\r\n### Observed result\r\n```\r\nextra_hosts:\r\n      dev.local: 192.168.2.2\r\n      npm.dev.local: 192.168.2.3\r\n```\r\n### Expected result\r\n```\r\nextra_hosts:\r\n    - dev.local:192.168.2.2\r\n    - npm.dev.local:192.168.2.3\r\n```\r\n### Stacktrace / full error message\r\n\r\n## Additional information\r\n\r\nOS 20.1 / Linux Mint, `docker-compose build` .\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7493",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7493/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7493/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7493/events",
      "html_url": "https://github.com/docker/compose/issues/7493",
      "id": 628780192,
      "node_id": "MDU6SXNzdWU2Mjg3ODAxOTI=",
      "number": 7493,
      "title": "Allow using wildcards in Docker-Compose network > aliases",
      "user": {
        "login": "KevinGhadyani-minted",
        "id": 45860344,
        "node_id": "MDQ6VXNlcjQ1ODYwMzQ0",
        "avatar_url": "https://avatars.githubusercontent.com/u/45860344?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KevinGhadyani-minted",
        "html_url": "https://github.com/KevinGhadyani-minted",
        "followers_url": "https://api.github.com/users/KevinGhadyani-minted/followers",
        "following_url": "https://api.github.com/users/KevinGhadyani-minted/following{/other_user}",
        "gists_url": "https://api.github.com/users/KevinGhadyani-minted/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KevinGhadyani-minted/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KevinGhadyani-minted/subscriptions",
        "organizations_url": "https://api.github.com/users/KevinGhadyani-minted/orgs",
        "repos_url": "https://api.github.com/users/KevinGhadyani-minted/repos",
        "events_url": "https://api.github.com/users/KevinGhadyani-minted/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KevinGhadyani-minted/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 153640415,
          "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/feature",
          "name": "kind/feature",
          "color": "bfd4f2",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-06-01T22:56:22Z",
      "updated_at": "2021-05-24T18:14:20Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen setting up a Proxy service in Docker-Compose, I need to always define hostnames both in my hosts file and in `networks > [NETWORK_NAME] > aliases`.\r\n\r\nFor instance:\r\n- `frontend.myapp.localhost`\r\n- `api.myapp.localhost`\r\n\r\nI would like both domains to point at the proxy at whichever port I defined. This way, I can have multiple services running on the same port.\r\n\r\nIf my host machine targets `frontend.myapp.localhost` or `api.myapp.localhost`, because I have those domains setup in my hosts file, everything works fine.\r\n\r\nThe problem occurs when everything is behind the proxy. For instance, I'm doing server-side rendering and `frontend.myapp.localhost` now tries to call out to `api.myapp.localhost` before sending me some HTML. All of a sudden, I need to be using the docker-compose container name of `api` instead.\r\n\r\nThe way I fix this is by assigning aliases on the docker-compose `proxy` app network:\r\n```yml\r\nservices:\r\n  proxy:\r\n    networks:\r\n      proxy:\r\n        aliases:\r\n          - api.myapp.localhost\r\n          - frontend.myapp.localhost\r\n```\r\n\r\n**Describe the solution you'd like**\r\n1. It'd be a lot easier for me to do `*.myapp.localhost` instead of having to define each and every one.\r\n2. If my proxy application could look into the directories of other apps, pull in their proxy configs, and create an alias file for docker-compose which generates the `aliases` property.\r\n\r\nEither solution fits my needs, but #1 is far easier to implement. A combination of the two would be ideal because then anyone could use this proxy image and only need to ensure they're passing in a list of directories to check for configs.\r\n\r\n**Describe alternatives you've considered**\r\nRight now, I'm manually putting in every alias, but because my proxy app needs to be an independent repository, I have to manually add every possible alias by hand. In my case, that's 70+ applications to manage. If they change their URL, that's time I have to spend updating these local aliases.\r\n\r\nGood luck to any dev that has to bisect older code in a different repo. It won't work if they changed the URL alias passed into the proxy.",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8449",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8449/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8449/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8449/events",
      "html_url": "https://github.com/docker/compose/issues/8449",
      "id": 953948818,
      "node_id": "MDU6SXNzdWU5NTM5NDg4MTg=",
      "number": 8449,
      "title": "Failed to solve with frontend dockerfile.v0: failed to create LLB definition: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed",
      "user": {
        "login": "gintsmurans",
        "id": 56369,
        "node_id": "MDQ6VXNlcjU2MzY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/56369?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gintsmurans",
        "html_url": "https://github.com/gintsmurans",
        "followers_url": "https://api.github.com/users/gintsmurans/followers",
        "following_url": "https://api.github.com/users/gintsmurans/following{/other_user}",
        "gists_url": "https://api.github.com/users/gintsmurans/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gintsmurans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gintsmurans/subscriptions",
        "organizations_url": "https://api.github.com/users/gintsmurans/orgs",
        "repos_url": "https://api.github.com/users/gintsmurans/repos",
        "events_url": "https://api.github.com/users/gintsmurans/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gintsmurans/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        },
        {
          "id": 3327019107,
          "node_id": "MDU6TGFiZWwzMzI3MDE5MTA3",
          "url": "https://api.github.com/repos/docker/compose/labels/Docker%20Compose%20V1",
          "name": "Docker Compose V1",
          "color": "FBCA04",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2021-07-27T14:33:37Z",
      "updated_at": "2021-09-07T11:32:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Hi!\r\n\r\n## Description of the issue\r\n\r\nI recently updated docker and after update it seems that Dockerfile cannot use local images anymore. I have this instance:\r\n\r\n![image](https://user-images.githubusercontent.com/56369/127170226-700aa07f-cca7-4e1f-80b9-c6e8b86616fb.png)\r\n\r\nWhich is later used by another service in Dockerfile using `FROM services_develop:staging`. Prior update it was working just fine, now only option seems to be to create a local registry. Is this really intended?\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.29.2, build 5becea4c\r\ndocker-py version: 5.0.0\r\nCPython version: 3.9.0\r\nOpenSSL version: OpenSSL 1.1.1h  22 Sep 2020\r\n```\r\n/!\\ If `docker-compose version` reports v2.0...` you're using the wrong repository, please report issues on [Compose-CLI](https://github.com/docker/compose-cli/issues/new)\r\n\r\n**Output of `docker version`**\r\n```\r\nClient:\r\n Cloud integration: 1.0.17\r\n Version:           20.10.7\r\n API version:       1.41\r\n Go version:        go1.16.4\r\n Git commit:        f0df350\r\n Built:             Wed Jun  2 11:56:23 2021\r\n OS/Arch:           darwin/arm64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.7\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       b0f5bc3\r\n  Built:            Wed Jun  2 11:55:36 2021\r\n  OS/Arch:          linux/arm64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.6\r\n  GitCommit:        d71fcd7d8303cbf684402823e425e9dd2e99285d\r\n runc:\r\n  Version:          1.0.0-rc95\r\n  GitCommit:        b9ee9c6314599f1b4a7f497e1f1f856fe433d3b7\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nnetworks:\r\n  default:\r\n    driver: bridge\r\n  pm_default:\r\n    external: true\r\n    name: pm_default\r\nservices:\r\n  build:\r\n    build:\r\n      args:\r\n        SRC_MOUNT_PATH: /srv/sites/services\r\n      context: /Users/xxx/Documents/Projects/sites/yyy/services/docker/build\r\n    depends_on:\r\n      develop:\r\n        condition: service_started\r\n    environment:\r\n      DEPLOYMENT_PROD_HOSTS: ''\r\n      DEPLOYMENT_PROD_KEY_FILENAME: ''\r\n      DEPLOYMENT_PROD_KEY_PASSPHRASE: ''\r\n      DEPLOYMENT_PROD_LOCAL_SCRIPTS_PATH: ''\r\n      DEPLOYMENT_PROD_REMOTE_SCRIPTS_PATH: ''\r\n      DEPLOYMENT_PROD_RUNTIME_PATH: /srv/sites/yyy/services\r\n      DEPLOYMENT_PROD_TEST_RUNTIME_PATH: /srv/sites/yyy/testing.services\r\n      DEPLOYMENT_PROD_TMP_PATH: /tmp\r\n      DEPLOYMENT_PROD_USERNAME: root\r\n      RUNTIME_PATH: /srv/sites/services/pm_services\r\n      SRC_MOUNT_PATH: /srv/sites/services\r\n    image: services_build:staging\r\n    networks:\r\n      default: null\r\n    volumes:\r\n    - /Users/xxx/Documents/Projects/sites/yyy/services:/srv/sites/services:cached\r\n  develop:\r\n    build:\r\n      args:\r\n        SRC_MOUNT_PATH: /srv/sites/services\r\n      context: /Users/xxx/Documents/Projects/sites/yyy/services/docker/develop\r\n    depends_on:\r\n      redisdb:\r\n        condition: service_started\r\n    environment:\r\n      DEPLOYMENT_PROD_HOSTS: ''\r\n      DEPLOYMENT_PROD_KEY_FILENAME: ''\r\n      DEPLOYMENT_PROD_KEY_PASSPHRASE: ''\r\n      DEPLOYMENT_PROD_LOCAL_SCRIPTS_PATH: ''\r\n      DEPLOYMENT_PROD_REMOTE_SCRIPTS_PATH: ''\r\n      DEPLOYMENT_PROD_RUNTIME_PATH: /srv/sites/yyy/services\r\n      DEPLOYMENT_PROD_TEST_RUNTIME_PATH: /srv/sites/yyy/testing.services\r\n      DEPLOYMENT_PROD_TMP_PATH: /tmp\r\n      DEPLOYMENT_PROD_USERNAME: root\r\n      RUNTIME_PATH: /srv/sites/services/pm_services\r\n      SRC_MOUNT_PATH: /srv/sites/services\r\n    image: services_develop:staging\r\n    networks:\r\n      default: null\r\n      pm_default: null\r\n    ports:\r\n    - published: 4100\r\n      target: 4100\r\n    - published: 4200\r\n      target: 4110\r\n    volumes:\r\n    - /Users/xxx/Documents/Projects/sites/yyy/services:/srv/sites/services:cached\r\n  redisdb:\r\n    image: redis:alpine\r\nversion: '3.9'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `docker-compose up --build build`\r\n\r\n### Observed result\r\nFails to run\r\n\r\n### Expected result\r\nContainer is run\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n#2 [services_build:staging internal] load build definition from Dockerfile\r\n#2 sha256:904e5663af5547b640ab36250d9303488863d83cb6ca4c0111b17700a843eec9\r\n#2 transferring dockerfile: 337B done\r\n#2 DONE 0.0s\r\n\r\n#1 [services_develop:staging internal] load build definition from Dockerfile\r\n#1 sha256:d8973824e1cc852c8a3ba858f1c282f2943a049f4c86b2cc88e4ecfb20912cb3\r\n#1 transferring dockerfile: 860B done\r\n#1 DONE 0.0s\r\n\r\n#3 [services_develop:staging internal] load .dockerignore\r\n#3 sha256:a577a2d1f67337b83d0055cf11cf3d65ec16157e002120d74886257da7875479\r\n#3 transferring context: 2B done\r\n#3 DONE 0.0s\r\n\r\n#4 [services_develop:staging internal] load metadata for docker.io/library/debian:stable\r\n#4 sha256:03abc9f10f935e7137bbfe987d86a0879bf4bcb2ca500f3919314c6aa058f2f8\r\n#4 ...\r\n\r\n#5 [services_build:staging internal] load .dockerignore\r\n#5 sha256:a3a79252ae83d732c535c559ffb437f9be6ae841462892d5b0c084a22f5ebf2b\r\n#5 transferring context: 2B done\r\n#5 DONE 0.0s\r\n\r\n#6 [services_build:staging internal] load metadata for docker.io/library/services_develop:staging\r\n#6 sha256:0aabca4baec97ad783f7b602174718f61033d1eb5568a3e962ea3e70e39858bb\r\n#6 ERROR: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed\r\n\r\n#4 [services_develop:staging internal] load metadata for docker.io/library/debian:stable\r\n#4 sha256:03abc9f10f935e7137bbfe987d86a0879bf4bcb2ca500f3919314c6aa058f2f8\r\n#4 CANCELED\r\n------\r\n > [services_build:staging internal] load metadata for docker.io/library/services_develop:staging:\r\n------\r\nfailed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed\r\n```\r\n\r\n## Additional information\r\n\r\nMacbook Pro M1, MacOS 11.4.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/4548",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/4548/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/4548/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/4548/events",
      "html_url": "https://github.com/docker/compose/issues/4548",
      "id": 211084519,
      "node_id": "MDU6SXNzdWUyMTEwODQ1MTk=",
      "number": 4548,
      "title": "docker-compose run fails for running network_mode=host services",
      "user": {
        "login": "SpComb",
        "id": 3950373,
        "node_id": "MDQ6VXNlcjM5NTAzNzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3950373?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SpComb",
        "html_url": "https://github.com/SpComb",
        "followers_url": "https://api.github.com/users/SpComb/followers",
        "following_url": "https://api.github.com/users/SpComb/following{/other_user}",
        "gists_url": "https://api.github.com/users/SpComb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SpComb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SpComb/subscriptions",
        "organizations_url": "https://api.github.com/users/SpComb/orgs",
        "repos_url": "https://api.github.com/users/SpComb/repos",
        "events_url": "https://api.github.com/users/SpComb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SpComb/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 29,
      "created_at": "2017-03-01T13:42:16Z",
      "updated_at": "2021-04-20T20:50:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "For a `network_mode: host` service,\r\n\r\n```yaml\r\nversion: '2'\r\nservices:\r\n  redis:\r\n    image: redis\r\n    network_mode: host\r\n```\r\n\r\n```\r\n$ docker-compose version\r\ndocker-compose version 1.11.1, build 7c5d5e4\r\ndocker-py version: 2.0.2\r\nCPython version: 2.7.13\r\nOpenSSL version: OpenSSL 1.0.1t  3 May 2016\r\n$ hostname\r\nlocalhost\r\n$ docker-compose run --rm redis hostname\r\nlocalhost\r\n```\r\n\r\nThe `docker-compose run` command fails if the service is running:\r\n\r\n```\r\n$ docker-compose up -d redis\r\nStarting composetest_redis_1\r\n$ docker-compose run --rm redis hostname\r\nERROR: Cannot create container for service redis: Conflicting options: host type networking can't be used with links. This would result in undefined behavior\r\n$ docker-compose stop redis         \r\nStopping composetest_redis_1 ... done\r\n$ docker-compose run --rm redis hostname\r\nlocalhost\r\n```\r\n\r\nIt looks like `docker-compose --verbose run` tries to do some `--link` trickery against the running container, but this is not compatible with the `--net host`:\r\n\r\n```\r\n\r\ncompose.cli.verbose_proxy.proxy_callable: docker create_host_config -> {'Binds': [],\r\n 'Links': ['composetest_redis_1:composetest_redis_1',\r\n           'composetest_redis_1:redis',\r\n           'composetest_redis_1:redis_1'],\r\n 'LogConfig': {'Config': {}, 'Type': u''},\r\n 'NetworkMode': 'host',\r\n 'PortBindings': {},\r\n 'VolumesFrom': []}\r\n\r\nERROR: compose.cli.main.main: Cannot create container for service redis: Conflicting options: host type networking can't be used with links. This would result in undefined behavior\r\n```\r\n\r\nPossibly related:  #2480",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8333",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8333/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8333/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8333/events",
      "html_url": "https://github.com/docker/compose/issues/8333",
      "id": 893614915,
      "node_id": "MDU6SXNzdWU4OTM2MTQ5MTU=",
      "number": 8333,
      "title": "Add the possibility to depend on a profile",
      "user": {
        "login": "1c3t3a",
        "id": 45260993,
        "node_id": "MDQ6VXNlcjQ1MjYwOTkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/45260993?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/1c3t3a",
        "html_url": "https://github.com/1c3t3a",
        "followers_url": "https://api.github.com/users/1c3t3a/followers",
        "following_url": "https://api.github.com/users/1c3t3a/following{/other_user}",
        "gists_url": "https://api.github.com/users/1c3t3a/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/1c3t3a/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/1c3t3a/subscriptions",
        "organizations_url": "https://api.github.com/users/1c3t3a/orgs",
        "repos_url": "https://api.github.com/users/1c3t3a/repos",
        "events_url": "https://api.github.com/users/1c3t3a/events{/privacy}",
        "received_events_url": "https://api.github.com/users/1c3t3a/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 153640415,
          "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/feature",
          "name": "kind/feature",
          "color": "bfd4f2",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-05-17T19:00:43Z",
      "updated_at": "2021-05-20T14:39:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Describe the solution you'd like**\r\nIt would be nice to use docker-compose profiles in a way that I could use them in `depend_on`. An example would look something like this:\r\n```yaml\r\nversion: 3.9\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - \"5000:5000\"\r\n    profiles: [\"frontend\"]\r\n    depends_on: \r\n      - \"backend\"\r\n  redis:\r\n    image: \"redis:alpine\"\r\n    profiles: [\"backend\"]\r\n  db:\r\n    image: \"postgres:latest\"\r\n    profiles: [\"backend\"]\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nUsing normal syntax would require writing out all services. This is also not that much work, but for large files I'd definitely see an improvement.\r\n\r\n**Additional context**\r\nI don't know if you've already considered this and decided against it or if that it's not how profiles were planned out, but I would definitely have some use cases for this.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7842",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7842/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7842/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7842/events",
      "html_url": "https://github.com/docker/compose/issues/7842",
      "id": 713723715,
      "node_id": "MDU6SXNzdWU3MTM3MjM3MTU=",
      "number": 7842,
      "title": "stacktrace using buildkit",
      "user": {
        "login": "xenoterracide",
        "id": 5517,
        "node_id": "MDQ6VXNlcjU1MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5517?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xenoterracide",
        "html_url": "https://github.com/xenoterracide",
        "followers_url": "https://api.github.com/users/xenoterracide/followers",
        "following_url": "https://api.github.com/users/xenoterracide/following{/other_user}",
        "gists_url": "https://api.github.com/users/xenoterracide/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xenoterracide/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xenoterracide/subscriptions",
        "organizations_url": "https://api.github.com/users/xenoterracide/orgs",
        "repos_url": "https://api.github.com/users/xenoterracide/repos",
        "events_url": "https://api.github.com/users/xenoterracide/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xenoterracide/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-10-02T15:49:26Z",
      "updated_at": "2021-08-18T11:16:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Description of the issue\r\n\r\n```\r\n#11 [stage-1 2/2] COPY --from=builder /usr/local/share/postgresql/extension/...\r\n#11 DONE 0.3s\r\n[3163] Failed to execute script docker-compose\r\nTraceback (most recent call last):\r\n  File \"bin/docker-compose\", line 3, in <module>\r\n  File \"compose/cli/main.py\", line 67, in main\r\n  File \"compose/cli/main.py\", line 126, in perform_command\r\n  File \"compose/cli/main.py\", line 1070, in up\r\n  File \"compose/cli/main.py\", line 1066, in up\r\n  File \"compose/project.py\", line 615, in up\r\n  File \"compose/service.py\", line 362, in ensure_image_exists\r\n  File \"compose/service.py\", line 1129, in build\r\n  File \"compose/progress_stream.py\", line 22, in stream_output\r\n  File \"compose/utils.py\", line 50, in split_buffer\r\n  File \"compose/utils.py\", line 26, in stream_as_text\r\n  File \"compose/service.py\", line 1876, in build\r\nIndexError: list index out of range\r\nError: Process completed with exit code 255\r\n```\r\n\r\n\r\n## Context information (for bug reports)\r\n\r\n```\r\ndocker-compose version 1.27.3, build 4092ae5d\r\nDocker version 19.03.12+azure, build 0ed913b885c8919944a2e4c8d0b80a318a8dd48b\r\nservices:\r\n  db:\r\n    build:\r\n      context: /home/runner/work/services/services/postgres\r\n    environment:\r\n      POSTGRES_DB: production\r\n      POSTGRES_PASSWORD: DontUseThisPassword\r\n      POSTGRES_USER: postgres\r\n    image: cloud-stack/postgres:latest\r\n    networks:\r\n      default:\r\n        aliases:\r\n        - db.host\r\n    ports:\r\n    - 5432:5432/tcp\r\n  liquibase:\r\n    build:\r\n      context: /home/runner/work/services/services/migrations/liquibase\r\n    depends_on:\r\n      db:\r\n        condition: service_started\r\n    environment:\r\n      DB_HOST: db.host\r\n      DB_PASSWORD: DontUseThisPassword\r\n      DB_USERNAME: postgres\r\n      LIQUIBASE_CONTEXTS: test\r\n    image: cloud-stack/service-db-main-migration:latest\r\n    networks:\r\n      default: null\r\n    volumes:\r\n    - /home/runner/work/services/services/migrations/liquibase/changelog:/liquibase/changelog:rw\r\n  rabbitmq:\r\n    build:\r\n      context: /home/runner/work/services/services/rabbitmq\r\n    environment:\r\n      RABBITMQ_DEFAULT_PASS: HoppingDownTheBunnyTrail\r\n      RABBITMQ_DEFAULT_USER: PeterCottontail\r\n    image: cloud-stack/rabbitmq:latest\r\n    networks:\r\n      default:\r\n        aliases:\r\n        - rabbitmq.host\r\n    ports:\r\n    - 1883:1883/tcp\r\n    - 5672:5672/tcp\r\n    - 15672:15672/tcp\r\nversion: '3.7'\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n```\r\nLinux fv-az184 5.4.0-1025-azure #25~18.04.1-Ubuntu SMP Sat Sep 5 15:28:57 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\nthis is running in a github workflow, here's the relevant workflow information\r\n\r\n```yaml\r\nname: Main\r\non:\r\n  schedule:\r\n    - cron: '0 6 * * *'\r\n  push:\r\njobs:\r\n  build-postgres:\r\n    runs-on: ubuntu-latest\r\n    timeout-minutes: 2\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n        with:\r\n          fetch-depth: 0\r\n      - uses: docker/setup-buildx-action@v1\r\n        with:\r\n          install: true\r\n      - uses: actions/cache@v2\r\n        with:\r\n          path: /tmp/.buildx-cache\r\n          key: ${{ runner.os }}-buildx-${{ github.sha }}\r\n          restore-keys: |\r\n            ${{ runner.os }}-buildx-\r\n      - uses: ./.github/actions/git-short-ref\r\n        id: ref\r\n      - uses: aws-actions/configure-aws-credentials@v1\r\n        with:\r\n          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}\r\n          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}\r\n          aws-region: us-east-1\r\n      - uses: aws-actions/amazon-ecr-login@v1\r\n        id: login-ecr\r\n      - uses: docker/build-push-action@v2\r\n        with:\r\n          context: postgres\r\n          file: postgres/Dockerfile\r\n          push: true\r\n          tags: ${{ steps.login-ecr.outputs.registry }}/cloud-stack/postgres:${{ steps.ref.outputs.ref }}\r\n          cache-from: type=local,src=/tmp/.buildx-cache\r\n          cache-to: type=local,dest=/tmp/.buildx-cache\r\n      - name: Slack Notification\r\n        uses: rtCamp/action-slack-notify@master\r\n        if: failure() && !contains( github.ref, 'feature' )\r\n        env:\r\n          SLACK_COLOR: '#ff0000'\r\n          SLACK_TITLE: You have failed this project!\r\n          SLACK_WEBHOOK: ${{ secrets.SLACK_DEV_NOTIFICATIONS_WEBHOOK }}\r\n\r\n  build-migrations:\r\n    runs-on: ubuntu-latest\r\n    timeout-minutes: 5\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n        with:\r\n          fetch-depth: 0\r\n      - uses: docker/setup-buildx-action@v1\r\n        with:\r\n          install: true\r\n      - uses: actions/cache@v2\r\n        with:\r\n          path: /tmp/.buildx-cache\r\n          key: ${{ runner.os }}-buildx-${{ github.sha }}\r\n          restore-keys: |\r\n            ${{ runner.os }}-buildx-\r\n      - uses: docker/build-push-action@v2\r\n        with:\r\n          context: migrations/liquibase\r\n          file: migrations/liquibase/Dockerfile\r\n          tags: cloud-stack/service-db-migrations:latest\r\n          cache-from: type=local,src=/tmp/.buildx-cache\r\n          cache-to: type=local,dest=/tmp/.buildx-cache\r\n      - name: Slack Notification\r\n        uses: rtCamp/action-slack-notify@master\r\n        if: failure() && !contains( github.ref, 'feature' )\r\n        env:\r\n          SLACK_COLOR: '#ff0000'\r\n          SLACK_TITLE: You have failed this project!\r\n          SLACK_WEBHOOK: ${{ secrets.SLACK_DEV_NOTIFICATIONS_WEBHOOK }}\r\n\r\n  test-migrations:\r\n    needs: [build-postgres, build-migrations]\r\n    runs-on: ubuntu-latest\r\n    timeout-minutes: 5\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n        with:\r\n          fetch-depth: 0\r\n      - uses: docker/setup-buildx-action@v1\r\n        with:\r\n          install: true\r\n      - uses: actions/cache@v2\r\n        with:\r\n          path: /tmp/.buildx-cache\r\n          key: ${{ runner.os }}-buildx-${{ github.sha }}\r\n          restore-keys: |\r\n            ${{ runner.os }}-buildx-\r\n      - run: docker-compose --version && docker --version && docker-compose config\r\n      - run: docker-compose up db liquibase\r\n        env:\r\n          COMPOSE_DOCKER_CLI_BUILD: 1\r\n          DOCKER_BUILDKIT: 1\r\n      - run: cd migrations/test && docker-compose up\r\n      - name: Slack Notification\r\n        uses: rtCamp/action-slack-notify@master\r\n        if: failure() && !contains( github.ref, 'feature' )\r\n        env:\r\n          SLACK_COLOR: '#ff0000'\r\n          SLACK_TITLE: You have failed this project!\r\n          SLACK_WEBHOOK: ${{ secrets.SLACK_DEV_NOTIFICATIONS_WEBHOOK }}\r\n```\r\n\r\nand docker files\r\n\r\n```Dockerfile\r\nFROM postgis/postgis:11-2.5-alpine AS builder\r\nENV PGTAP_VERSION '1.1.0'\r\nRUN apk add --update-cache build-base git perl\r\nRUN git clone https://github.com/theory/pgtap.git\r\nWORKDIR pgtap\r\nRUN git checkout v$PGTAP_VERSION\r\nRUN make\r\nRUN make install\r\n\r\nFROM postgis/postgis:11-2.5-alpine\r\nENV DEST /usr/local/share/postgresql/extension/\r\nCOPY --from=builder $DEST $DEST\r\nENTRYPOINT [\"docker-entrypoint.sh\"]\r\n\r\nEXPOSE 5432\r\nCMD [\"postgres\"]\r\n\r\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ \"pg_isready\", \"--host=localhost\", \"--username=postgres\", \"--dbname=production\" ]\r\n```\r\n```Dockerfile\r\nFROM alpine:latest AS waitforit\r\nRUN apk add wget\r\nRUN mkdir /root/src\r\nWORKDIR /root/src\r\nRUN wget --quiet https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh\r\nRUN chmod +x wait-for-it.sh\r\n\r\nFROM liquibase/liquibase:latest\r\nUSER root\r\nENV DB_PORT=5432\r\nENV DB_HOST=\r\nENV LIQUIBASE_LOG_LEVEL=info\r\nENV LIQUIBASE_CONTEXTS=\r\nRUN apt-get update && apt-get install -y postgresql-client && rm -rf /var/lib/apt/lists/*\r\nCOPY --from=waitforit /root/src /liquibase\r\nCOPY entrypoint.sh /\r\nCOPY changelog /liquibase/changelog\r\nUSER liquibase\r\nENTRYPOINT [ \"/entrypoint.sh\" ]\r\n```\r\n\r\nsorry that this is probably more information than a minimal reproduction, hopefully you can reproduce.",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7759",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7759/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7759/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7759/events",
      "html_url": "https://github.com/docker/compose/issues/7759",
      "id": 700293787,
      "node_id": "MDU6SXNzdWU3MDAyOTM3ODc=",
      "number": 7759,
      "title": "`docker-compose stop` doesn't stop things",
      "user": {
        "login": "WhyNotHugo",
        "id": 730811,
        "node_id": "MDQ6VXNlcjczMDgxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WhyNotHugo",
        "html_url": "https://github.com/WhyNotHugo",
        "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
        "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
        "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
        "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
        "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
        "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "aiordache",
        "id": 809903,
        "node_id": "MDQ6VXNlcjgwOTkwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/809903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aiordache",
        "html_url": "https://github.com/aiordache",
        "followers_url": "https://api.github.com/users/aiordache/followers",
        "following_url": "https://api.github.com/users/aiordache/following{/other_user}",
        "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions",
        "organizations_url": "https://api.github.com/users/aiordache/orgs",
        "repos_url": "https://api.github.com/users/aiordache/repos",
        "events_url": "https://api.github.com/users/aiordache/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aiordache/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "aiordache",
          "id": 809903,
          "node_id": "MDQ6VXNlcjgwOTkwMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/809903?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/aiordache",
          "html_url": "https://github.com/aiordache",
          "followers_url": "https://api.github.com/users/aiordache/followers",
          "following_url": "https://api.github.com/users/aiordache/following{/other_user}",
          "gists_url": "https://api.github.com/users/aiordache/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/aiordache/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/aiordache/subscriptions",
          "organizations_url": "https://api.github.com/users/aiordache/orgs",
          "repos_url": "https://api.github.com/users/aiordache/repos",
          "events_url": "https://api.github.com/users/aiordache/events{/privacy}",
          "received_events_url": "https://api.github.com/users/aiordache/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/docker/compose/milestones/52",
        "html_url": "https://github.com/docker/compose/milestone/52",
        "labels_url": "https://api.github.com/repos/docker/compose/milestones/52/labels",
        "id": 5884302,
        "node_id": "MDk6TWlsZXN0b25lNTg4NDMwMg==",
        "number": 52,
        "title": "1.27.4",
        "description": null,
        "creator": {
          "login": "ulyssessouza",
          "id": 373485,
          "node_id": "MDQ6VXNlcjM3MzQ4NQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/373485?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ulyssessouza",
          "html_url": "https://github.com/ulyssessouza",
          "followers_url": "https://api.github.com/users/ulyssessouza/followers",
          "following_url": "https://api.github.com/users/ulyssessouza/following{/other_user}",
          "gists_url": "https://api.github.com/users/ulyssessouza/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ulyssessouza/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ulyssessouza/subscriptions",
          "organizations_url": "https://api.github.com/users/ulyssessouza/orgs",
          "repos_url": "https://api.github.com/users/ulyssessouza/repos",
          "events_url": "https://api.github.com/users/ulyssessouza/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ulyssessouza/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2020-09-16T14:01:19Z",
        "updated_at": "2020-09-24T14:32:54Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2020-09-12T16:28:56Z",
      "updated_at": "2020-09-16T14:01:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Description of the issue\r\n\r\nIssuing `docker-compose stop` doesn't stop services. However, it does report them as stopped:\r\n\r\n```console\r\n$ docker-compose stop\r\nStopping REDACTED_frontend_1  ... done\r\nStopping REDACTED_minio_1     ... done\r\nStopping REDACTED_memcached_1 ... done\r\nStopping REDACTED_mailhog_1   ... done\r\nStopping REDACTED_postgres_1  ... done\r\nStopping REDACTED_rabbitmq_1  ... done\r\n\r\n$ docker-compose stop  # Issuing the same command here.\r\nStopping REDACTED_minio_1    ... done\r\nStopping REDACTED_mailhog_1  ... done\r\nStopping REDACTED_postgres_1 ... done\r\n\r\n$ docker-compose stop  # Issuing the same command here.\r\nStopping REDACTED_minio_1    ... done\r\nStopping REDACTED_mailhog_1  ... done\r\nStopping REDACTED_postgres_1 ... done\r\n\r\n$  # Several containers are still running at this point.\r\n```\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```console\r\n$ docker-compose version\r\ndocker-compose version 1.26.2, build unknown\r\ndocker-py version: 4.3.1\r\nCPython version: 3.8.5\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n\r\n```\r\n\r\n**Output of `docker version`**\r\n```console\r\n$ docker version\r\nClient:\r\n Version:           19.03.12-ce\r\n API version:       1.40\r\n Go version:        go1.14.5\r\n Git commit:        48a66213fe\r\n Built:             Sat Jul 18 01:33:21 2020\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          19.03.12-ce\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.14.5\r\n  Git commit:       48a66213fe\r\n  Built:            Sat Jul 18 01:32:59 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.4.0.m\r\n  GitCommit:        09814d48d50816305a8e6c1a4ae3e2bcc4ba725a.m\r\n runc:\r\n  Version:          1.0.0-rc92\r\n  GitCommit:        ff819c7e9184c13b7c2607fe6c30ae19403a7aff\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  celery:\r\n    build:\r\n      context: /home/hugo/workspace/REDACTED\r\n    command: celery -A idf.core worker -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler\r\n    depends_on:\r\n    - mailhog\r\n    - memcached\r\n    - postgres\r\n    - rabbitmq\r\n    environment:\r\n      REDACTED: REDACTED\r\n    healthcheck:\r\n      test: /app/scripts/healthcheck-celery\r\n    image: app\r\n    user: django\r\n    volumes:\r\n    - /home/hugo/workspace/REDACTED:/app:ro\r\n    - static:/static:rw\r\n  django:\r\n    build:\r\n      context: /home/hugo/workspace/REDACTED\r\n    command: django-admin runserver 0.0.0.0:8000\r\n    depends_on:\r\n    - frontend\r\n    - mailhog\r\n    - memcached\r\n    - minio\r\n    - postgres\r\n    - rabbitmq\r\n    - translations\r\n    environment:\r\n      REDACTED: REDACTED\r\n    extra_hosts:\r\n    - www.REDACTED.localhost:127.0.0.1\r\n    - static.REDACTED.localhost:127.0.0.1\r\n    healthcheck:\r\n      test: /app/scripts/healthcheck-django\r\n    image: app\r\n    ports:\r\n    - 8000:8000/tcp\r\n    user: django\r\n    volumes:\r\n    - /home/hugo/workspace/REDACTED:/app:rw\r\n    - static:/static:rw\r\n  frontend:\r\n    command: yarn build --watch --dest dists/REDACTED --target app\r\n    environment:\r\n      SASS_PATH: REDACTED\r\n    image: node:latest\r\n    restart: on-failure\r\n    volumes:\r\n    - /home/hugo/workspace/REDACTED:/app:rw\r\n    working_dir: /app\r\n  mailhog:\r\n    healthcheck:\r\n      test: echo | telnet 127.0.0.1 25\r\n    image: mailhog/mailhog\r\n    ports:\r\n    - 8025:8025/tcp\r\n  memcached:\r\n    image: memcached:latest\r\n    ports:\r\n    - 11211:11211/tcp\r\n  minio:\r\n    command: minio server /data\r\n    environment:\r\n      REDACTED: REDACTED\r\n    healthcheck:\r\n      test:\r\n      - CMD\r\n      - curl\r\n      - -f\r\n      - http://localhost:9000/minio/health/live\r\n    image: minio/minio\r\n    ports:\r\n    - 9000:9000/tcp\r\n    volumes:\r\n    - buckets:/data:rw\r\n  postgres:\r\n    healthcheck:\r\n      test:\r\n      - CMD\r\n      - pg_isready\r\n      - --username\r\n      - postgres\r\n    image: mdillon/postgis:11-alpine\r\n    ports:\r\n    - 5432:5432/tcp\r\n    volumes:\r\n    - postgres_data:/var/lib/postgresql/data:rw\r\n  rabbitmq:\r\n    image: rabbitmq:latest\r\n    ports:\r\n    - 5672:5672/tcp\r\n  translations:\r\n    build:\r\n      context: /home/hugo/workspace/REDACTED\r\n    command: django-admin compilemessages\r\n    environment:\r\n      REDACTED: REDACTED\r\n    image: app\r\n    user: django\r\n    volumes:\r\n    - /home/hugo/workspace/REDACTED:/app:rw\r\nversion: '3.0'\r\nvolumes:\r\n  buckets: {}\r\n  postgres_data: {}\r\n  static: {}\r\n\r\n\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. `docker-compose up`\r\n1. `docker-compose stop`\r\n\r\n### Observed result\r\n\r\nServices should either be stopped, or an error should be reported.\r\n\r\n### Expected result\r\n\r\nServices don't stop AND `docker-compose` indicates they're stopped (when\r\nthey're not!).\r\n\r\n## Additional information\r\n\r\nRunning on ArchLinux:\r\n\r\n    Linux aphrodite 5.8.6-arch1-1 #1 SMP PREEMPT Thu, 03 Sep 2020 17:27:39 +0000 x86_64 GNU/Linux\r\n\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7258",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7258/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7258/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7258/events",
      "html_url": "https://github.com/docker/compose/issues/7258",
      "id": 573075795,
      "node_id": "MDU6SXNzdWU1NzMwNzU3OTU=",
      "number": 7258,
      "title": "`docker-compose pull` NOT failing if a service image is not found (and includes both image and build)",
      "user": {
        "login": "erks",
        "id": 342307,
        "node_id": "MDQ6VXNlcjM0MjMwNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/342307?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/erks",
        "html_url": "https://github.com/erks",
        "followers_url": "https://api.github.com/users/erks/followers",
        "following_url": "https://api.github.com/users/erks/following{/other_user}",
        "gists_url": "https://api.github.com/users/erks/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/erks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/erks/subscriptions",
        "organizations_url": "https://api.github.com/users/erks/orgs",
        "repos_url": "https://api.github.com/users/erks/repos",
        "events_url": "https://api.github.com/users/erks/events{/privacy}",
        "received_events_url": "https://api.github.com/users/erks/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2020-02-29T00:13:03Z",
      "updated_at": "2021-06-23T09:22:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nhttps://github.com/docker/compose/issues/6464 described the behavior where `docker-compose pull` failing if a service includes both image and build as a bug. This was \"fixed\" in [1.25.1](https://github.com/docker/compose/pull/6494). We actually rely on this behavior to decide whether we need to build and push the image and don't think the pre-1.25.1 behavior was a bug.\r\n\r\nThe `pull` command should do as it says, which is to try to pull all the images specified in `docker-compose.yml`, and reports error appropriately regardless of whether `build` is specified.\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.2, build 698e2846\r\ndocker-py version: 4.1.0\r\nCPython version: 3.7.5\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  build:\r\n    build:\r\n      context: /private/tmp/test\r\n    command: echo \"from build\"\r\n    image: example\r\n  test:\r\n    command: echo \"from test\"\r\n    image: example\r\nversion: '3.0'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Same as https://github.com/docker/compose/issues/6464\r\n\r\n### Observed result\r\n\r\nThe service with both image and build didn't throw an error and was reported \"done\" \r\n\r\n```\r\n$ docker-compose pull\r\nPulling build ... done\r\nPulling test  ... error\r\n\r\nERROR: for test  pull access denied for example, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\nERROR: pull access denied for example, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\n```\r\n\r\n### Expected result\r\n\r\nThe service with both image and build does the \"pull\" as instructed and reports appropriate errors if it fails to do so.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n$ docker-compose pull\r\nPulling build ... done\r\nPulling test  ... error\r\n\r\nERROR: for test  pull access denied for example, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\nERROR: pull access denied for example, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\r\n```\r\n\r\n## Additional information\r\n\r\nDarwin, downloaded docker from docker.com/get-started\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8222",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8222/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8222/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8222/events",
      "html_url": "https://github.com/docker/compose/issues/8222",
      "id": 835963464,
      "node_id": "MDU6SXNzdWU4MzU5NjM0NjQ=",
      "number": 8222,
      "title": "1.28.5 issues rebuilding images with docker-compose up --build",
      "user": {
        "login": "PhilJay",
        "id": 6759734,
        "node_id": "MDQ6VXNlcjY3NTk3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6759734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PhilJay",
        "html_url": "https://github.com/PhilJay",
        "followers_url": "https://api.github.com/users/PhilJay/followers",
        "following_url": "https://api.github.com/users/PhilJay/following{/other_user}",
        "gists_url": "https://api.github.com/users/PhilJay/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/PhilJay/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PhilJay/subscriptions",
        "organizations_url": "https://api.github.com/users/PhilJay/orgs",
        "repos_url": "https://api.github.com/users/PhilJay/repos",
        "events_url": "https://api.github.com/users/PhilJay/events{/privacy}",
        "received_events_url": "https://api.github.com/users/PhilJay/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-03-19T12:58:24Z",
      "updated_at": "2021-05-21T01:26:01Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nI've recently updated from docker-compose `1.27.4` to `1.28.5`. Prior to the update, the following command worked as expected and my image was rebuilt reflecting all the changes I made to the source code:\r\n`docker-compose -f docker-compose.yml -H \"ssh://user@domain.com\" up --build --force-recreate -d`\r\n\r\nAfter the update, the command executes without error but the image is not rebuilt, despite me providing the `--build` option. I double checked that this is the case by looking at the output of `docker images` right after the command finished. \r\n\r\nThe only way to get the above command to actually re-build an image is to manually delete the previous image.\r\n\r\nDowngrading to 1.27.4 resolves the issue.\r\n\r\n## Context information \r\n\r\nI am deploying to a linux server. Firewall disabled due to #8221 \r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.28.5, build c4eb3a1f\r\ndocker-py version: 4.4.4\r\nCPython version: 3.9.0\r\nOpenSSL version: OpenSSL 1.1.1h  22 Sep 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Cloud integration: 1.0.9\r\n Version:           20.10.5\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        55c4c88\r\n Built:             Tue Mar  2 20:13:00 2021\r\n OS/Arch:           darwin/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.5\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       363e9a8\r\n  Built:            Tue Mar  2 20:15:47 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.3\r\n  GitCommit:        269548fa27e0089a8b8278fc4fc781d7f65a939b\r\n runc:\r\n  Version:          1.0.0-rc92\r\n  GitCommit:        ff819c7e9184c13b7c2607fe6c30ae19403a7aff\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nnetworks:\r\n  rmd:\r\n    driver: bridge\r\nservices:\r\n  rmd-cms:\r\n    build:\r\n      context: /project\r\n      dockerfile: Dockerfile\r\n    container_name: rmd-cms\r\n    image: rmd-cms\r\n    networks:\r\n      rmd: null\r\n    ports:\r\n    - published: 1343\r\n      target: 80\r\n    restart: always\r\nversion: '3.7'\r\n```\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Setup docker-compose for any software project, use the above compose configuration.\r\n2. Deploy to a remote host using the above docker-compose up command\r\n3. Make a record of the deployed project status\r\n4. Implement changes to the project\r\n5. Repeat step 2\r\n6. Confirm that the changes are not reflected in the container and the image has not been rebuilt\r\n\r\n### Observed result\r\nImage is not rebuilt.\r\n\r\n### Expected result\r\nImage is rebuilt and the code changes are reflected in the container.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/6975",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/6975/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/6975/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/6975/events",
      "html_url": "https://github.com/docker/compose/issues/6975",
      "id": 509744007,
      "node_id": "MDU6SXNzdWU1MDk3NDQwMDc=",
      "number": 6975,
      "title": "Volume mounted inside another sometimes disappears after file change",
      "user": {
        "login": "josh-byster",
        "id": 8664074,
        "node_id": "MDQ6VXNlcjg2NjQwNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8664074?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josh-byster",
        "html_url": "https://github.com/josh-byster",
        "followers_url": "https://api.github.com/users/josh-byster/followers",
        "following_url": "https://api.github.com/users/josh-byster/following{/other_user}",
        "gists_url": "https://api.github.com/users/josh-byster/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/josh-byster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/josh-byster/subscriptions",
        "organizations_url": "https://api.github.com/users/josh-byster/orgs",
        "repos_url": "https://api.github.com/users/josh-byster/repos",
        "events_url": "https://api.github.com/users/josh-byster/events{/privacy}",
        "received_events_url": "https://api.github.com/users/josh-byster/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        },
        {
          "id": 237987771,
          "node_id": "MDU6TGFiZWwyMzc5ODc3NzE=",
          "url": "https://api.github.com/repos/docker/compose/labels/status/0-triage",
          "name": "status/0-triage",
          "color": "ededed",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2019-10-21T05:47:11Z",
      "updated_at": "2021-05-11T22:08:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "**Description**\r\n\r\nNot sure if this is a Compose-specific issue or Moby so I have the linked issue [here](https://github.com/moby/moby/issues/40109) in case it's not Compose-specific.\r\n\r\n**Summary**: We mount our source code in a directory in the container, and within that directory, mount on top a named volume which contains data from the built image (`node_modules`). Sometimes this named volume seems to unmount, resulting in an underlying empty directory in the container.\r\n\r\n**Background**: Essentially, I have the mount of the `backend` folder to the container source code located at `/var/www/app`. However, since I don't have `node_modules` installed on the host, we have a named volume mounted called `be_modules`. This has the effect of (when it's working) using the installed node_modules in the image, effectively mounting \"on-top\" of the source code in `/var/www/app`.\r\n\r\nThe key is here in the Docker Compose file, which gets the `node_modules` directory working usually:\r\n```\r\n- ./backend:/var/www/app\r\n- be_modules:/var/www/app/node_modules\r\n```\r\n    \r\n**Issue:** Running `docker-compose up` or `docker-compose run backend sh` (for debugging) shows correctly the `node_modules` retrieved from the image. They all show up just fine, and the date/time on the `node_modules` folder when running `ls` is whenever the volume got created. All is good.\r\n\r\nThere's an empty `node_modules` directory created on the host, which is normal since it mounted into the container and so the corresponding folder got created on the host. \r\n\r\nHowever, occasionally (and more frequent on my coworker's machine) we will make a few changes in the source code while our container is up. The changes syncs up to the container (as it should), however `node_modules` then becomes an empty folder in the container! Moreover, the datetime of the directory changes to the time when the image was built (and is the same as the timestamp of the empty directory on the host)! In other words, it's as if the named volume just randomly unmounts for no reason. Doing nothing to the source but restarting `docker-compose down -v` and `docker-compose up` fixes it until it happens again.\r\n\r\n**What we tried:** Restarting Docker, removing all images, containers, volumes, and starting a fresh build. \r\n\r\n\r\nWhy would this be happening? My suspicion is that it's either a Docker / Compose bug since I can't reproduce with the exact same code, or there's some subtlety that I'm missing. I'm almost seems the issue has to do with when a file changes that Docker is re-mounting the entire directory in the container, and this is over-over-writing the `be_modules` mount with that empty directory, since the timestamp between the host empty directory and container empty directory are the same.\r\nIt's **not** device specific. \r\n\r\n**Steps to reproduce the issue:**\r\n\r\nCan't write an MWE since it doesn't happen always (for me, almost never; my coworker: all the time) and frequency depends on the machine, which makes me suspect that's a bug rather than something else.\r\n \r\n[Link to docker-compose gist](https://gist.github.com/josh-byster/130661f8b705a3609d736ada9eeadb46)\r\n\r\n[Link to dockerfile gist](https://gist.github.com/josh-byster/d0b54222b162b8a9e0a0bd3444ff43ff)\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nIssue seems to happen randomly on my machine along with some of my coworkers. However, on one coworker's machine, this issue happens almost every time they make a change. \r\n\r\nI'm posting here instead of Docker Compose since I think this may be an issue with volume mounting.\r\n\r\n\r\n*\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.24.1, build 4667896b\r\ndocker-py version: 3.7.3\r\nCPython version: 3.6.8\r\nOpenSSL version: OpenSSL 1.1.0j  20 Nov 2018\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.2\r\n API version:       1.40\r\n Go version:        go1.12.8\r\n Git commit:        6a30dfc\r\n Built:             Thu Aug 29 05:26:49 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.2\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.8\r\n  Git commit:       6a30dfc\r\n  Built:            Thu Aug 29 05:32:21 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          v1.2.6\r\n  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb\r\n runc:\r\n  Version:          1.0.0-rc8\r\n  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n\r\n```\r\nservices:\r\n  backend:\r\n    build:\r\n      context: /Users/joshbyster/Documents/repo_name/backend\r\n    command: npm start\r\n    depends_on:\r\n    - db\r\n    environment:\r\n      PORT: '5000'\r\n    ports:\r\n    - published: 5000\r\n      target: 5000\r\n    volumes:\r\n    - /Users/joshbyster/Documents/repo_name/backend:/var/www/app:rw\r\n    - be_modules:/var/www/app/node_modules:rw\r\n  db:\r\n    image: mongo\r\n    init: true\r\n    logging:\r\n      driver: none\r\n    ports:\r\n    - published: 27017\r\n      target: 27017\r\n    volumes:\r\n    - mongo_data:/data/db:rw\r\n  frontend:\r\n    build:\r\n      context: /Users/joshbyster/Documents/repo_name\r\n/frontend\r\n    command: npm start\r\n    depends_on:\r\n    - backend\r\n    - db\r\n    environment:\r\n      PORT: '3000'\r\n      REACT_APP_API_PORT: '5000'\r\n    ports:\r\n    - published: 3000\r\n      target: 3000\r\n    volumes:\r\n    - /Users/joshbyster/Documents/repo_name/frontend:/var/www/app:rw\r\n    - fe_modules:/var/www/app/node_modules:rw\r\nversion: '3.7'\r\nvolumes:\r\n  be_modules: {}\r\n  fe_modules: {}\r\n  mongo_data: {}\r\n\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\nPlease see above\r\n\r\nWe run the following commands in order to reproduce:\r\n```\r\ndocker-compose run backend sh \r\nls -al node_modules #shows correct listing of all node_modules\r\n# make some change in a file and save it\r\nls -al node_modules # empty directory with date from when empty node_modules folder on host was created\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\n\r\nRunning OS X 10.14.6 but see this issue on Docker with WSL. ",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/7397",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/7397/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/7397/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/7397/events",
      "html_url": "https://github.com/docker/compose/issues/7397",
      "id": 605357505,
      "node_id": "MDU6SXNzdWU2MDUzNTc1MDU=",
      "number": 7397,
      "title": "docker-compose up fails with symlinked Dockerfile",
      "user": {
        "login": "davidhewitt",
        "id": 1939362,
        "node_id": "MDQ6VXNlcjE5MzkzNjI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1939362?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidhewitt",
        "html_url": "https://github.com/davidhewitt",
        "followers_url": "https://api.github.com/users/davidhewitt/followers",
        "following_url": "https://api.github.com/users/davidhewitt/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidhewitt/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidhewitt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidhewitt/subscriptions",
        "organizations_url": "https://api.github.com/users/davidhewitt/orgs",
        "repos_url": "https://api.github.com/users/davidhewitt/repos",
        "events_url": "https://api.github.com/users/davidhewitt/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidhewitt/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2020-04-23T08:52:26Z",
      "updated_at": "2021-05-14T10:14:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\n\r\nI have several microservices which share an identical `Dockerfile`. To simplify maintenance and reduce duplication I would like to replace all the Dockerfiles with a symlink to a single \"common\" `Dockerfile`.\r\n\r\nBefore symlinking, my directory structure looks like this:\r\n\r\n```\r\n- docker-compose.yaml\r\n- microservice_a/\r\n  - Dockerfile\r\n- microservice_b/\r\n  - Dockerfile\r\n```\r\n\r\nafter, it looks like this:\r\n\r\n```\r\n- docker-compose.yaml\r\n- common/\r\n  - Dockerfile\r\n- microservice_a/\r\n  - Dockerfile  ->  ../common/Dockerfile\r\n- microservice_b/\r\n  - Dockerfile  ->  ../common/Dockerfile\r\n```\r\n\r\nWithout symlinking, `docker-compose up` works as expected.\r\n\r\nOnce I switch to the symlink model, this no longer works, and I get errors related to `Dockerfile: no such file or directory`. See below for more detail:\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.25.4, build 8d51620a\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nDocker version 19.03.8, build afacb8b\r\n```\r\n\r\n(ommited docker-compose config because it contains confidential information like private keys which I'm configuring using env vars)\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Create two services with idential dockerfiles and reference them both in a compose file.\r\n2. Move their dockerfile to a subdirectory 'common' and symlink it in the services' Dockerfiles.\r\n\r\n### Observed result\r\n\r\n`docker-compose` can no longer find the Dockerfile, even though it's still in \"the same place\" because of the symlink.\r\n\r\n### Expected result\r\n\r\n`docker-compose` continues to function, and can read the Dockerfile through the new symlink.\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\n[+] Building 0.0s (2/2) FINISHED\r\n => [internal] load .dockerignore                                                                                                  0.0s\r\n => => transferring context: 34B                                                                                                   0.0s\r\n => [internal] load build definition from Dockerfile                                                                               0.0s\r\n => => transferring dockerfile: 70B                                                                                                0.0s\r\nfailed to solve with frontend dockerfile.v0: failed to read dockerfile: open /var/lib/docker/tmp/buildkit-mount384971895/common/Dockerfile: no such file or directory\r\nTraceback (most recent call last):\r\n  File \"docker-compose\", line 6, in <module>\r\n  File \"compose/cli/main.py\", line 72, in main\r\n  File \"compose/cli/main.py\", line 128, in perform_command\r\n  File \"compose/cli/main.py\", line 1077, in up\r\n  File \"compose/cli/main.py\", line 1073, in up\r\n  File \"compose/project.py\", line 548, in up\r\n  File \"compose/service.py\", line 351, in ensure_image_exists\r\n  File \"compose/service.py\", line 1110, in build\r\n  File \"compose/progress_stream.py\", line 25, in stream_output\r\n  File \"compose/utils.py\", line 61, in split_buffer\r\n  File \"compose/utils.py\", line 37, in stream_as_text\r\n  File \"compose/service.py\", line 1818, in build\r\nFileNotFoundError: [Errno 2] No such file or directory: '/var/folders/7_/wk5b0_312sq4_9x59jhq0q_r0000gn/T/tmp0jhuoqwn'\r\n[20348] Failed to execute script docker-compose\r\n```\r\n\r\n## Additional information\r\n\r\nMacOS Catalina 10.15.4\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8499",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8499/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8499/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8499/events",
      "html_url": "https://github.com/docker/compose/issues/8499",
      "id": 985228533,
      "node_id": "MDU6SXNzdWU5ODUyMjg1MzM=",
      "number": 8499,
      "title": "TypeError: __init__() got an unexpected keyword argument 'disable_buffering'",
      "user": {
        "login": "stam",
        "id": 12035356,
        "node_id": "MDQ6VXNlcjEyMDM1MzU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/12035356?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stam",
        "html_url": "https://github.com/stam",
        "followers_url": "https://api.github.com/users/stam/followers",
        "following_url": "https://api.github.com/users/stam/following{/other_user}",
        "gists_url": "https://api.github.com/users/stam/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/stam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stam/subscriptions",
        "organizations_url": "https://api.github.com/users/stam/orgs",
        "repos_url": "https://api.github.com/users/stam/repos",
        "events_url": "https://api.github.com/users/stam/events{/privacy}",
        "received_events_url": "https://api.github.com/users/stam/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-09-01T14:30:45Z",
      "updated_at": "2021-09-01T15:35:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\ndocker-compose up fails to run as it gives a TypeError:\r\n\r\n## Context information (for bug reports)\r\nUbuntu 20.04, tried on python 3.8 and python 3.6.\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.29.2, build unknown\r\ndocker-py version: 5.0.1\r\nCPython version: 3.6.14\r\nOpenSSL version: OpenSSL 1.1.1f  31 Mar 2020\r\n```\r\n/!\\ If `docker-compose version` reports v2.0...` you're using the wrong repository, please report issues on [Compose-CLI](https://github.com/docker/compose-cli/issues/new)\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           20.10.8\r\n API version:       1.41\r\n Go version:        go1.16.6\r\n Git commit:        3967b7d\r\n Built:             Fri Jul 30 19:54:08 2021\r\n OS/Arch:           linux/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.8\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.16.6\r\n  Git commit:       75249d8\r\n  Built:            Fri Jul 30 19:52:16 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.9\r\n  GitCommit:        e25210fe30a0a703442421b0f60afac609f950a3\r\n runc:\r\n  Version:          1.0.1\r\n  GitCommit:        v1.0.1-0-g4144b63\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nservices:\r\n  backend:\r\n    container_name: kg-demo-api\r\n    environment:\r\n      DB_URL: SECRET\r\n    image: SOME_URL/backend:latest\r\n    volumes:\r\n    - /data/nginx/www/static:/static:rw\r\n  frontend:\r\n    container_name: kg-demo-ui\r\n    image: SOME_URL/frontend:latest\r\n    restart: unless-stopped\r\n  nginx:\r\n    container_name: nginx\r\n    image: SOME_URL/nginx:latest\r\n    ports:\r\n    - published: 80\r\n      target: 80\r\n    - published: 443\r\n      target: 443\r\n    restart: unless-stopped\r\n    volumes:\r\n    - /data/nginx/conf.d:/etc/nginx/conf.d:rw\r\n    - /etc/letsencrypt:/etc/letsencrypt:rw\r\n    - /data/nginx/www:/var/www:rw\r\nversion: '3'\r\n\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Run docker-compose up \r\n2.\r\n3.\r\n\r\n### Observed result\r\nThe specific backend docker container is not running, but the other 2 are. \r\n\r\n### Expected result\r\nEverything running or at least dumping stacktraces\r\n\r\n### Stacktrace / full error message\r\n\r\n```\r\nnginx is up-to-date\r\nStarting kg-demo-api ...\r\nkg-demo-ui is up-to-date\r\n\r\nERROR: for kg-demo-api  __init__() got an unexpected keyword argument 'disable_buffering'\r\n\r\nERROR: for backend  __init__() got an unexpected keyword argument 'disable_buffering'\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/docker-compose\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 81, in main\r\n    command_func()\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 203, in perform_command\r\n    handler(command, command_options)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/metrics/decorator.py\", line 18, in wrapper\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 1186, in up\r\n    to_attach = up(False)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/cli/main.py\", line 1182, in up\r\n    attach_dependencies=attach_dependencies,\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/project.py\", line 702, in up\r\n    get_deps,\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 108, in parallel_execute\r\n    raise error_to_reraise\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 206, in producer\r\n    result = func(obj)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/project.py\", line 688, in do\r\n    override_options=override_options,\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/service.py\", line 586, in execute_convergence_plan\r\n    containers, scale, timeout, detached, start\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/service.py\", line 524, in _execute_convergence_start\r\n    \"Starting\",\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 108, in parallel_execute\r\n    raise error_to_reraise\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/parallel.py\", line 206, in producer\r\n    result = func(obj)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/service.py\", line 522, in <lambda>\r\n    lambda c: self.start_container_if_stopped(c, attach_logs=not detached, quiet=True),\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/service.py\", line 637, in start_container_if_stopped\r\n    container.attach_log_stream()\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/container.py\", line 202, in attach_log_stream\r\n    self.log_stream = self.attach(stdout=True, stderr=True, stream=True)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/compose/container.py\", line 294, in attach\r\n    return self.client.attach(self.id, *args, **kwargs)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n    return f(self, resource_id, *args, **kwargs)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/docker/api/container.py\", line 58, in attach\r\n    response = self._post(u, headers=headers, params=params, stream=True)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/docker/utils/decorators.py\", line 46, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/docker/api/client.py\", line 233, in _post\r\n    return self.post(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 581, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1379, in getresponse\r\n    response = self.response_class(self.sock, method=self._method)\r\n  File \"/home/borg/.local/lib/python3.6/site-packages/docker/transport/unixconn.py\", line 43, in response_class\r\n    return httplib.HTTPResponse(sock, *args, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'disable_buffering'\r\n```\r\n\r\n## Additional information\r\n\r\nOS version / distribution, `docker-compose` install method, etc.\r\nUbuntu 20.04, python 3.6 (also tried python 3.8) everything installed with ansible scripts, https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64 and with the `pip install docker-compose`",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/6736",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/6736/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/6736/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/6736/events",
      "html_url": "https://github.com/docker/compose/issues/6736",
      "id": 450242903,
      "node_id": "MDU6SXNzdWU0NTAyNDI5MDM=",
      "number": 6736,
      "title": "Hooks to run scripts on host before starting any containers",
      "user": {
        "login": "Jamie-",
        "id": 4096784,
        "node_id": "MDQ6VXNlcjQwOTY3ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4096784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jamie-",
        "html_url": "https://github.com/Jamie-",
        "followers_url": "https://api.github.com/users/Jamie-/followers",
        "following_url": "https://api.github.com/users/Jamie-/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jamie-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jamie-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jamie-/subscriptions",
        "organizations_url": "https://api.github.com/users/Jamie-/orgs",
        "repos_url": "https://api.github.com/users/Jamie-/repos",
        "events_url": "https://api.github.com/users/Jamie-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jamie-/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 153640415,
          "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/feature",
          "name": "kind/feature",
          "color": "bfd4f2",
          "default": false,
          "description": null
        },
        {
          "id": 237987771,
          "node_id": "MDU6TGFiZWwyMzc5ODc3NzE=",
          "url": "https://api.github.com/repos/docker/compose/labels/status/0-triage",
          "name": "status/0-triage",
          "color": "ededed",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 17,
      "created_at": "2019-05-30T10:40:13Z",
      "updated_at": "2021-05-18T07:06:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "This is clearly a common problem lots of people have been facing (even since 2014, #468), there's pile of closed issues for similar functionality to be added before and they have been closed, I believe, entirely un-reasonably.\r\n\r\nPlease see #1341 for a very concise argument as to why this functionality is useful, and judging by the **reactions to most of the comments**, it is quite a popular feature the community would like added.\r\n\r\nNow it's over 2 years since #1341 was closed I believe hook-like functionality should be reconsidered.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nThere are many examples in #1341 already but I'll add my most recent use case for this.\r\n\r\nI have a number of containers that are spun up, using compose, for development which require a shared data directory. I also need to access that directory on my host. Inside each of my containers a Python program is started as a specific user (as to mimic production as accurately as possible). Currently I mount this volume on each of my containers in docker-compose like so:\r\n```\r\nvolumes:\r\n  - \"/tmp/data-var:/var/data\"\r\n```\r\nHowever `/tmp/data-var` doesn't exist on my host (this is a shared development project), so it's created by docker for me, as root. Therefore my Python programs, running as non-root, cannot write to it.\r\n\r\nBefore `docker-compose up` starts any containers, I'd like to call something like `mkdir /tmp/data-var && chown +w /tmp/data-var`. Then on `docker-compose down` after all containers are destroyed I'd like to remove the temp data directory `rm -rf /tmp/data-var`.\r\n\r\nI understand this _could_ be accomplished in other ways, please see the alternatives section below as to why these suck.\r\n\r\n## Describe the solution you'd like\r\nI'd like to have two bash scripts, say `pre-up.sh` and `post-down.sh` and add them to be called via docker-compose with something like the following in my `docker-compose.yml`\r\n```\r\nversion: \"3\"\r\npre-up: \"./pre-up.sh\"\r\npost-down: \"./post-down.sh\"\r\nservices:\r\n  service1:\r\n    build: .\r\n    volumes:\r\n      - \"/tmp/data-var:/var/data\"\r\n```\r\nOther possible hooks people might find useful:\r\n* `post-up`: Called after containers have all started\r\n* `post-stop`: Called after containers have been stopped (either with ^C or docker-compose stop)\r\n* `pre-down`: Called before destroying containers and networks (with `docker-compose down`)\r\n* etc.\r\n\r\nWhen calling these, compose should block at the specified point until the script has returned with an exit code of 0, and itself stop with a non-zero exit code if the script exits with a non-zero code.\r\n\r\n## Describe alternatives you've considered\r\nThere are alternatives for _my example_ use case, and equally good reasons they're a bad fit. \r\n\r\n### 1. Calling a script on container start\r\nI could have an `ENTRYPOINT [\"start.sh\"]` which sets the correct permissions on the directory, then my Python run command be specified via `CMD [\"python\", ...]` and have `start.sh` finally call `exec \"$@\"`. However this is a waste as the first container to get started, and every container restart after would do the same thing, it only needs to be done once before any containers start.\r\n\r\nEqually, it wouldn't solve my `post-down: \"./post-down.sh\"` use case.\r\n\r\n### 2. Wrapping it up in a different script\r\nI could write a wrapper script that calls `docker-compose up`, as that's been suggested many times in other issues. Come on... we're all using compose because it's concise, neat, tidy and simple to use. Everything is specified in one place which makes it easy for beginners to understand and read what's going on. Compose itself is essentially a standard when using docker with multiple containers.\r\n\r\n### 3. Compose events\r\nThough my understanding of events is lacking, due to how complex it is for what I really want to do. This is a poor way to achieve the goal I described, just like many other issues that were raised, then all pointed to #1510 (compose events). Events are reactive, this needs to be proactive, but more importantly, **events do not block**, and for many people, like me, blocking is essential.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/3874",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/3874/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/3874/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/3874/events",
      "html_url": "https://github.com/docker/compose/issues/3874",
      "id": 173070936,
      "node_id": "MDU6SXNzdWUxNzMwNzA5MzY=",
      "number": 3874,
      "title": "When using multiple docker-compose.yml files from different directories, local paths are not followed correctly.",
      "user": {
        "login": "brocoli",
        "id": 901272,
        "node_id": "MDQ6VXNlcjkwMTI3Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/901272?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brocoli",
        "html_url": "https://github.com/brocoli",
        "followers_url": "https://api.github.com/users/brocoli/followers",
        "following_url": "https://api.github.com/users/brocoli/following{/other_user}",
        "gists_url": "https://api.github.com/users/brocoli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brocoli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brocoli/subscriptions",
        "organizations_url": "https://api.github.com/users/brocoli/orgs",
        "repos_url": "https://api.github.com/users/brocoli/repos",
        "events_url": "https://api.github.com/users/brocoli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brocoli/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 190714435,
          "node_id": "MDU6TGFiZWwxOTA3MTQ0MzU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/enhancement",
          "name": "kind/enhancement",
          "color": "5319e7",
          "default": false,
          "description": null
        },
        {
          "id": 237987771,
          "node_id": "MDU6TGFiZWwyMzc5ODc3NzE=",
          "url": "https://api.github.com/repos/docker/compose/labels/status/0-triage",
          "name": "status/0-triage",
          "color": "ededed",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "ndeloof",
        "id": 132757,
        "node_id": "MDQ6VXNlcjEzMjc1Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/132757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ndeloof",
        "html_url": "https://github.com/ndeloof",
        "followers_url": "https://api.github.com/users/ndeloof/followers",
        "following_url": "https://api.github.com/users/ndeloof/following{/other_user}",
        "gists_url": "https://api.github.com/users/ndeloof/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ndeloof/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ndeloof/subscriptions",
        "organizations_url": "https://api.github.com/users/ndeloof/orgs",
        "repos_url": "https://api.github.com/users/ndeloof/repos",
        "events_url": "https://api.github.com/users/ndeloof/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ndeloof/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "ndeloof",
          "id": 132757,
          "node_id": "MDQ6VXNlcjEzMjc1Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/132757?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ndeloof",
          "html_url": "https://github.com/ndeloof",
          "followers_url": "https://api.github.com/users/ndeloof/followers",
          "following_url": "https://api.github.com/users/ndeloof/following{/other_user}",
          "gists_url": "https://api.github.com/users/ndeloof/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ndeloof/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ndeloof/subscriptions",
          "organizations_url": "https://api.github.com/users/ndeloof/orgs",
          "repos_url": "https://api.github.com/users/ndeloof/repos",
          "events_url": "https://api.github.com/users/ndeloof/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ndeloof/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 32,
      "created_at": "2016-08-24T22:15:21Z",
      "updated_at": "2020-08-21T11:54:28Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Consider the following command, working from `~/myproj/`:\n\n`docker-compose -f docker-compose.yml -f somesubmodule/docker-compose.yml up`\n\nSuppose `somesubmodule/docker-compose.yml` contains the following\n\n```\nservices:\n  myservice:\n    build:\n      context: ./myservice\n```\n\n`docker-compose up` fails because it will try to build `myservice` from `~/myproj/myservice/docker-compose.yml` instead of `~/myproj/myservice/somesubmodule/docker-compose.yml`.\n\nThe error message is something like: `ERROR: build path ~/myproj/myservice/ either does not exist, is not accessible, or is not a valid URL.`\n\nThis happened with docker-compose version 1.8.0-rc1, build 9bf6bc6, installed from Homebrew on my Mac OS X Yosemite version 10.10.5\n\nNote that simply running `docker-compose -f somesubmodule/docker-compose.yml up` works fine, it's probably a glitch due to merging yml files and losing locality. Relative paths should be expanded before merging instead.\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8207",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8207/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8207/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8207/events",
      "html_url": "https://github.com/docker/compose/issues/8207",
      "id": 833649422,
      "node_id": "MDU6SXNzdWU4MzM2NDk0MjI=",
      "number": 8207,
      "title": "docker-compose from windows to remote linux over SSH -> OSError: [WinError 6] Invalid handle",
      "user": {
        "login": "maltaesousa",
        "id": 3328875,
        "node_id": "MDQ6VXNlcjMzMjg4NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3328875?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maltaesousa",
        "html_url": "https://github.com/maltaesousa",
        "followers_url": "https://api.github.com/users/maltaesousa/followers",
        "following_url": "https://api.github.com/users/maltaesousa/following{/other_user}",
        "gists_url": "https://api.github.com/users/maltaesousa/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/maltaesousa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maltaesousa/subscriptions",
        "organizations_url": "https://api.github.com/users/maltaesousa/orgs",
        "repos_url": "https://api.github.com/users/maltaesousa/repos",
        "events_url": "https://api.github.com/users/maltaesousa/events{/privacy}",
        "received_events_url": "https://api.github.com/users/maltaesousa/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2021-03-17T10:59:06Z",
      "updated_at": "2021-08-17T14:50:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Description of the issue\r\n\r\nAfter a docker update, `docker-compose down` from windows powershell with `DOCKER_HOST` env set to a remote over SSH returns an error:\r\n\r\n```\r\nException ignored in: <function Popen.__del__ at 0x000001388757AE50>\r\nTraceback (most recent call last):\r\n  File \"subprocess.py\", line 1051, in __del__\r\n  File \"subprocess.py\", line 1453, in _internal_poll\r\nOSError: [WinError 6] Invalid handle\r\n```\r\n\r\n## Context information (for bug reports)\r\n\r\n**Output of `docker-compose version`**\r\n```\r\ndocker-compose version 1.28.5, build c4eb3a1f\r\ndocker-py version: 4.4.4\r\nCPython version: 3.9.0\r\nOpenSSL version: OpenSSL 1.1.1g  21 Apr 2020\r\n```\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Cloud integration: 1.0.9\r\n Version:           20.10.5\r\n API version:       1.40\r\n Go version:        go1.13.15\r\n Git commit:        55c4c88\r\n Built:             Tue Mar  2 20:14:53 2021\r\n OS/Arch:           windows/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.10\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.13.3\r\n  Git commit:       9424aea\r\n  Built:            Thu Aug  6 02:55:27 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc9\r\n  GitCommit:        d736ef14f0288d6993a1845745d6756cfc9ddd5a\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n\r\n```\r\nservices:\r\n  redis:\r\n    image: redis:alpine\r\n  web:\r\n    build:\r\n      context: C:\\temp\\composetest\r\n    ports:\r\n    - published: 5800\r\n      target: 5000\r\nversion: '3.9'\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\nThis steps were done on a windows machine with a remote linux over SSH. Private key is set in `%USERPROFILE%/.ssh/id_rsa`.\r\n\r\n1. Open powershell where your `docker-compose.yml` is.\r\n2. Set `DOCKER_HOST` environment variable: `$env:DOCKER_HOST=\"ssh://user@server.example.com\"`\r\n3. `docker-compose up -d`\r\n4. `docker-compose down`\r\n\r\n### Observed result\r\n\r\n```\r\nStopping composetest_redis_1 ... done\r\nStopping composetest_web_1   ... done\r\nRemoving composetest_redis_1 ... done\r\nRemoving composetest_web_1   ... done\r\nRemoving network composetest_default\r\nException ignored in: <function Popen.__del__ at 0x00000199602FAE50>\r\nTraceback (most recent call last):\r\n  File \"subprocess.py\", line 1051, in __del__\r\n  File \"subprocess.py\", line 1453, in _internal_poll\r\nOSError: [WinError 6] Invalid handle\r\n```\r\n\r\n### Expected result\r\n\r\nNo OSError.\r\n\r\n### Stacktrace / full error message\r\n\r\nThis is the output of `docker-compose down`\r\n\r\n```\r\nStopping composetest_redis_1 ... done\r\nStopping composetest_web_1   ... done\r\nRemoving composetest_redis_1 ... done\r\nRemoving composetest_web_1   ... done\r\nRemoving network composetest_default\r\nException ignored in: <function Popen.__del__ at 0x00000199602FAE50>\r\nTraceback (most recent call last):\r\n  File \"subprocess.py\", line 1051, in __del__\r\n  File \"subprocess.py\", line 1453, in _internal_poll\r\nOSError: [WinError 6] Descripteur non valide\r\n```\r\n\r\n## Additional information\r\n\r\nSame composition and same remote but using a WSL 2 shell on same machine produces no error.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8538",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8538/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8538/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8538/events",
      "html_url": "https://github.com/docker/compose/issues/8538",
      "id": 986456872,
      "node_id": "MDU6SXNzdWU5ODY0NTY4NzI=",
      "number": 8538,
      "title": "Referencing local image name fails on \"docker compose build\"",
      "user": {
        "login": "neilyio",
        "id": 51208969,
        "node_id": "MDQ6VXNlcjUxMjA4OTY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/51208969?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/neilyio",
        "html_url": "https://github.com/neilyio",
        "followers_url": "https://api.github.com/users/neilyio/followers",
        "following_url": "https://api.github.com/users/neilyio/following{/other_user}",
        "gists_url": "https://api.github.com/users/neilyio/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/neilyio/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/neilyio/subscriptions",
        "organizations_url": "https://api.github.com/users/neilyio/orgs",
        "repos_url": "https://api.github.com/users/neilyio/repos",
        "events_url": "https://api.github.com/users/neilyio/events{/privacy}",
        "received_events_url": "https://api.github.com/users/neilyio/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 3313137385,
          "node_id": "MDU6TGFiZWwzMzEzMTM3Mzg1",
          "url": "https://api.github.com/repos/docker/compose/labels/Docker%20Compose%20V2",
          "name": "Docker Compose V2",
          "color": "1D76DB",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2021-06-06T03:45:01Z",
      "updated_at": "2021-09-07T06:05:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nIf you are reporting a new issue, make sure that we do not have any duplicates\r\nalready open. You can ensure this by searching the issue list for this\r\nrepository. If there is a duplicate, please close your issue and add a comment\r\nto the existing issue instead.\r\n\r\nIf you suspect your issue is a bug, please edit your issue description to\r\ninclude the BUG REPORT INFORMATION shown below. If you fail to provide this\r\ninformation within 7 days, we cannot debug your issue and will close it. We\r\nwill, however, reopen it if you later provide the information.\r\n\r\nFor more information about reporting issues, see\r\nhttps://github.com/docker/compose-cli/blob/master/CONTRIBUTING.md#reporting-other-issues\r\n\r\n---------------------------------------------------\r\nGENERAL SUPPORT INFORMATION\r\n---------------------------------------------------\r\n\r\nThe GitHub issue tracker is for bug reports and feature requests.\r\nGeneral support can be found at the following locations:\r\n\r\n- Docker Support Forums - https://forums.docker.com\r\n- Docker Community Slack - https://dockr.ly/community\r\n- Post a question on StackOverflow, using the Docker tag\r\n\r\n---------------------------------------------------\r\nBUG REPORT INFORMATION\r\n---------------------------------------------------\r\nUse the commands below to provide key information from your environment:\r\nYou do NOT have to include this information if this is a FEATURE REQUEST\r\n-->\r\n\r\n**Description**\r\n\r\nI'm getting an error from `docker compose build` with a setup that is consistently successful with `docker-compose build`.\r\n\r\nI have a `docker-compose.yml` file with two services: `base` and `extended`. `base.image` gives a name to the image built by `base`, and I'd like to use that name as the `FROM` image in the Dockerfile for the `extended` service.\r\n\r\nThis works well with `docker-compose build`. It does not work with `docker compose build`.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Re-create my `docker/` folder with these three files, plus an empty `README.md`. `cd` into `docker/`.\r\n```yml\r\n# docker/docker-compose.yml\r\nservices:\r\n  base:\r\n    image: neilyio/base\r\n    build:\r\n      context: .\r\n      dockerfile: base.Dockerfile\r\n\r\n  extended:\r\n    build:\r\n      context: .\r\n      dockerfile: extended.Dockerfile\r\n```\r\n```dockerfile\r\n# docker/base.Dockerfile\r\nFROM scratch\r\nCOPY README.md /root/README.md\r\n```\r\n```dockerfile\r\n# docker/extended.Dockerfile\r\nFROM neilyio/base\r\nCMD cat /root/README.md\r\n```\r\n2. `docker-compose build`, expect a successful run.\r\n3. Clear your cache and delete these new images so we have a clean comparison for the next step. I used these commands:\r\n```\r\ndocker image rm neilyio/base docker_extended\r\ndocker system prune -f\r\n```\r\n4. `docker compose build`, expect a failure.\r\n\r\n**Describe the results you received:**\r\n\r\n`docker compose build` produces:\r\n```\r\n[+] Building 0.6s (8/8) FINISHED                                                                                                                                                                            \r\n => [docker_extended internal] load build definition from extended.Dockerfile                                                                                                                          0.0s\r\n => => transferring dockerfile: 88B                                                                                                                                                                    0.0s\r\n => [neilyio/base internal] load build definition from base.Dockerfile                                                                                                                                 0.0s\r\n => => transferring dockerfile: 86B                                                                                                                                                                    0.0s\r\n => [docker_extended internal] load .dockerignore                                                                                                                                                      0.0s\r\n => => transferring context: 2B                                                                                                                                                                        0.0s\r\n => [neilyio/base internal] load .dockerignore                                                                                                                                                         0.0s\r\n => => transferring context: 2B                                                                                                                                                                        0.0s\r\n => ERROR [docker_extended internal] load metadata for docker.io/neilyio/base:latest                                                                                                                   0.4s\r\n => [neilyio/base internal] load build context                                                                                                                                                         0.0s\r\n => => transferring context: 3.65kB                                                                                                                                                                    0.0s\r\n => [neilyio/base 1/1] COPY README.md /root/README.md                                                                                                                                                  0.0s\r\n => [neilyio/base] exporting to image                                                                                                                                                                  0.0s\r\n => => exporting layers                                                                                                                                                                                0.0s\r\n => => writing image sha256:e29ad2347eed9046148ed435ca66984c9421c1d39ae9f40004a62658e60640c3                                                                                                           0.0s\r\n => => naming to docker.io/neilyio/base                                                                                                                                                                0.0s\r\n------\r\n > [docker_extended internal] load metadata for docker.io/neilyio/base:latest:\r\n------\r\nfailed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed\r\n```\r\n\r\n**Describe the results you expected:**\r\n\r\nI expected `docker compose build` to find the locally-built `neilyio/base` image, instead it seems to try and load from `docker.io/neilyio/base:latest`. I expected `docker compose build` to have the same behaviour as `docker-compose build`, which successfully found the local image.\r\n\r\n**Additional information you deem important (e.g. issue happens only occasionally):**\r\n\r\nThis can be a little tricky to reproduce because of Docker's caching. `docker compose build` will work fine if `neilyio/base` is _already built_. `docker compose build` will successfully find the local image, so it can give the impression that it's working. My step 3 above, clearing the cache, is important to accurately reproduce this. I found I needed to do both a `system prune` and `image rm` for this.\r\n\r\n`docker-compose build` works every time, whether or not `neilyio/base` has been built before.\r\n\r\n**Output of `docker version`:**\r\n\r\n```\r\nClient:\r\n Cloud integration: 1.0.14\r\n Version:           20.10.6\r\n API version:       1.41\r\n Go version:        go1.16.3\r\n Git commit:        370c289\r\n Built:             Fri Apr  9 22:46:57 2021\r\n OS/Arch:           darwin/arm64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.6\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8728dd2\r\n  Built:            Fri Apr  9 22:44:13 2021\r\n  OS/Arch:          linux/arm64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.4\r\n  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc:\r\n  Version:          1.0.0-rc93\r\n  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n**Output of `docker context show`:** \r\n\r\n```\r\ndefault\r\n```\r\n\r\n**Output of `docker info`:**\r\n\r\n```\r\nClient:\r\n Context:    default\r\n Debug Mode: false\r\n Plugins:\r\n  app: Docker App (Docker Inc., v0.9.1-beta3)\r\n  buildx: Build with BuildKit (Docker Inc., v0.5.1-docker)\r\n  compose: Docker Compose (Docker Inc., 2.0.0-beta.1)\r\n  scan: Docker Scan (Docker Inc., v0.8.0)\r\n\r\nServer:\r\n Containers: 0\r\n  Running: 0\r\n  Paused: 0\r\n  Stopped: 0\r\n Images: 2\r\n Server Version: 20.10.6\r\n Storage Driver: overlay2\r\n  Backing Filesystem: extfs\r\n  Supports d_type: true\r\n  Native Overlay Diff: true\r\n  userxattr: false\r\n Logging Driver: json-file\r\n Cgroup Driver: cgroupfs\r\n Cgroup Version: 1\r\n Plugins:\r\n  Volume: local\r\n  Network: bridge host ipvlan macvlan null overlay\r\n  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog\r\n Swarm: inactive\r\n Runtimes: io.containerd.runc.v2 io.containerd.runtime.v1.linux runc\r\n Default Runtime: runc\r\n Init Binary: docker-init\r\n containerd version: 05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc version: 12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n init version: de40ad0\r\n Security Options:\r\n  seccomp\r\n   Profile: default\r\n Kernel Version: 5.10.25-linuxkit\r\n Operating System: Docker Desktop\r\n OSType: linux\r\n Architecture: aarch64\r\n CPUs: 4\r\n Total Memory: 1.942GiB\r\n Name: docker-desktop\r\n ID: OP3D:IHZS:FQCX:56ZP:HNOA:X4KO:2EF2:AOY2:URIC:5GF6:LUHX:Z7QD\r\n Docker Root Dir: /var/lib/docker\r\n Debug Mode: false\r\n HTTP Proxy: http.docker.internal:3128\r\n HTTPS Proxy: http.docker.internal:3128\r\n Registry: https://index.docker.io/v1/\r\n Labels:\r\n Experimental: false\r\n Insecure Registries:\r\n  127.0.0.0/8\r\n Live Restore Enabled: false\r\n```\r\n\r\n**Additional environment details (AWS ECS, Azure ACI, local, etc.):**\r\n\r\nLocal run on M1 Macbook Air.\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/6851",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/6851/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/6851/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/6851/events",
      "html_url": "https://github.com/docker/compose/issues/6851",
      "id": 480621644,
      "node_id": "MDU6SXNzdWU0ODA2MjE2NDQ=",
      "number": 6851,
      "title": "Ability to show only container logs without container name with `docker-compose logs`",
      "user": {
        "login": "serge1peshcoff",
        "id": 1060257,
        "node_id": "MDQ6VXNlcjEwNjAyNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1060257?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/serge1peshcoff",
        "html_url": "https://github.com/serge1peshcoff",
        "followers_url": "https://api.github.com/users/serge1peshcoff/followers",
        "following_url": "https://api.github.com/users/serge1peshcoff/following{/other_user}",
        "gists_url": "https://api.github.com/users/serge1peshcoff/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/serge1peshcoff/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/serge1peshcoff/subscriptions",
        "organizations_url": "https://api.github.com/users/serge1peshcoff/orgs",
        "repos_url": "https://api.github.com/users/serge1peshcoff/repos",
        "events_url": "https://api.github.com/users/serge1peshcoff/events{/privacy}",
        "received_events_url": "https://api.github.com/users/serge1peshcoff/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 153640415,
          "node_id": "MDU6TGFiZWwxNTM2NDA0MTU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/feature",
          "name": "kind/feature",
          "color": "bfd4f2",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2019-08-14T11:16:16Z",
      "updated_at": "2021-02-08T09:28:21Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI have a few of my docker containers logging to stdout with JSON and I want to pass this output to a CLI utility to pretty-print it. For now each log line is prepended with the service name, and I can't find a way to disable it (or there is such flag but it's not documented).\r\n\r\nThis is how the output looks like:\r\n\r\n\r\n```\r\n$ docker-compose -f /opt/MyAEGEE/base-docker-compose.yml -f /opt/MyAEGEE/oms-global/docker/docker-compose.yml -f /opt/MyAEGEE/oms-core-elixir/docker/docker-compose.yml -f /opt/MyAEGEE/oms-serviceregistry/docker/docker-compose.yml -f /opt/MyAEGEE/oms-events/docker/docker-compose.yml -f /opt/MyAEGEE/oms-statutory/docker/docker-compose.yml -f /opt/MyAEGEE/oms-frontend/docker/docker-compose.yml -f /opt/MyAEGEE/oms-logo-print/docker/docker-compose.yml -f /opt/MyAEGEE/oms-mailer/docker/docker-compose.yml -f /opt/MyAEGEE/oms-discounts/docker/docker-compose.yml -f /opt/MyAEGEE/alastair/docker/docker-compose.yml logs -f --tail=100 oms-statutory\r\n\r\noms-statutory_1             | 2019-08-14T11:00:23.962Z [debug]: \tExecuting (default): SELECT \"event\".*, \"applications\".\"id\" AS \"applications.id\", \"applications\".\"event_id\" AS \"applications.event_id\", \"applications\".\"user_id\" AS \"applications.user_id\", \"applications\".\"body_id\" AS \"applications.body_id\", \"applications\".\"visa_required\" AS \"applications.visa_required\", \"applications\".\"board_comment\" AS \"applications.board_comment\", \"applications\".\"answers\" AS \"applications.answers\", \"applications\".\"participant_type\" AS \"applications.participant_type\", \"applications\".\"participant_order\" AS \"applications.participant_order\", \"applications\".\"status\" AS \"applications.status\", \"applications\".\"cancelled\" AS \"applications.cancelled\", \"applications\".\"paid_fee\" AS \"applications.paid_fee\", \"applications\".\"attended\" AS \"applications.attended\", \"applications\".\"registered\" AS \"applications.registered\", \"applications\".\"departed\" AS \"applications.departed\", \"applications\".\"first_name\" AS \"applications.first_name\", \"applications\".\"last_name\" AS \"applications.last_name\", \"applications\".\"email\" AS \"applications.email\", \"applications\".\"gender\" AS \"applications.gender\", \"applications\".\"body_name\" AS \"applications.body_name\", \"applications\".\"nationality\" AS \"applications.nationality\", \"applications\".\"visa_place_of_birth\" AS \"applications.visa_place_of_birth\", \"applications\".\"visa_passport_number\" AS \"applications.visa_passport_number\", \"applications\".\"visa_passport_issue_date\" AS \"applications.visa_passport_issue_date\", \"applications\".\"visa_passport_expiration_date\" AS \"applications.visa_passport_expiration_date\", \"applications\".\"visa_passport_issue_authority\" AS \"applications.visa_passport_issue_authority\", \"applications\".\"visa_embassy\" AS \"applications.visa_embassy\", \"applications\".\"visa_street_and_house\" AS \"applications.visa_street_and_house\", \"applications\".\"visa_postal_code\" AS \"applications.visa_postal_code\", \"applications\".\"visa_city\" AS \"applications.visa_city\", \"applications\".\"visa_country\" AS \"applications.visa_country\", \"applications\".\"date_of_birth\" AS \"applications.date_of_birth\", \"applications\".\"number_of_events_visited\" AS \"applications.number_of_events_visited\", \"applications\".\"meals\" AS \"applications.meals\", \"applications\".\"allergies\" AS \"applications.allergies\", \"applications\".\"is_on_memberslist\" AS \"applications.is_on_memberslist\", \"applications\".\"statutory_id\" AS \"applications.statutory_id\", \"applications\".\"created_at\" AS \"applications.created_at\", \"applications\".\"updated_at\" AS \"applications.updated_at\", \"image\".\"id\" AS \"image.id\", \"image\".\"user_id\" AS \"image.user_id\", \"image\".\"file_name\" AS \"image.file_name\", \"image\".\"file_folder\" AS \"image.file_folder\", \"image\".\"created_at\" AS \"image.created_at\", \"image\".\"updated_at\" AS \"image.updated_at\" FROM (SELECT \"event\".\"id\", \"event\".\"name\", \"event\".\"starts\", \"event\".\"ends\", \"event\".\"description\", \"event\".\"status\", \"event\".\"application_period_starts\", \"event\".\"application_period_ends\", \"event\".\"board_approve_deadline\", \"event\".\"participants_list_publish_deadline\", \"event\".\"memberslist_submission_deadline\", \"event\".\"body_id\", \"event\".\"questions\", \"event\".\"fee\", \"event\".\"type\", \"event\".\"image_id\", \"event\".\"url\", \"event\".\"created_at\", \"event\".\"updated_at\" FROM \"events\" AS \"event\" WHERE \"event\".\"url\" ILIKE 'autumn-agora-salerno-2019' LIMIT 1) AS \"event\" LEFT OUTER JOIN \"applications\" AS \"applications\" ON \"event\".\"id\" = \"applications\".\"event_id\" LEFT OUTER JOIN \"images\" AS \"image\" ON \"event\".\"image_id\" = \"image\".\"id\";\r\noms-statutory_1             | 2019-08-14T11:00:24.662Z [info]: \tGET /events/autumn-agora-salerno-2019/applications/stats 200 8334 - 724.043 ms, user couchie with id 93\r\noms-statutory_1             | 2019-08-14T11:00:28.659Z [debug]: \tExecuting (default): SELECT \"event\".\"id\", \"event\".\"name\", \"event\".\"starts\", \"event\".\"ends\", \"event\".\"description\", \"event\".\"status\", \"event\".\"application_period_starts\", \"event\".\"application_period_ends\", \"event\".\"board_approve_deadline\", \"event\".\"participants_list_publish_deadline\", \"event\".\"memberslist_submission_deadline\", \"event\".\"body_id\", \"event\".\"questions\", \"event\".\"fee\", \"event\".\"type\", \"event\".\"image_id\", \"event\".\"url\", \"event\".\"created_at\", \"event\".\"updated_at\", \"image\".\"id\" AS \"image.id\", \"image\".\"user_id\" AS \"image.user_id\", \"image\".\"file_name\" AS \"image.file_name\", \"image\".\"file_folder\" AS \"image.file_folder\", \"image\".\"created_at\" AS \"image.created_at\", \"image\".\"updated_at\" AS \"image.updated_at\" FROM \"events\" AS \"event\" LEFT OUTER JOIN \"images\" AS \"image\" ON \"event\".\"image_id\" = \"image\".\"id\" WHERE \"event\".\"status\" = 'published' ORDER BY \"event\".\"starts\" DESC LIMIT 1;\r\noms-statutory_1             | 2019-08-14T11:00:28.709Z [info]: \tGET /events/latest 304  - 74.354 ms, user andreeacezara with id 2171\r\noms-statutory_1             | 2019-08-14T11:10:46.393Z [debug]: \tExecuting (default): SELECT \"event\".\"id\", \"event\".\"name\", \"event\".\"starts\", \"event\".\"ends\", \"event\".\"description\", \"event\".\"status\", \"event\".\"application_period_starts\", \"event\".\"application_period_ends\", \"event\".\"board_approve_deadline\", \"event\".\"participants_list_publish_deadline\", \"event\".\"memberslist_submission_deadline\", \"event\".\"body_id\", \"event\".\"questions\", \"event\".\"fee\", \"event\".\"type\", \"event\".\"image_id\", \"event\".\"url\", \"event\".\"created_at\", \"event\".\"updated_at\", \"image\".\"id\" AS \"image.id\", \"image\".\"user_id\" AS \"image.user_id\", \"image\".\"file_name\" AS \"image.file_name\", \"image\".\"file_folder\" AS \"image.file_folder\", \"image\".\"created_at\" AS \"image.created_at\", \"image\".\"updated_at\" AS \"image.updated_at\" FROM \"events\" AS \"event\" LEFT OUTER JOIN \"images\" AS \"image\" ON \"event\".\"image_id\" = \"image\".\"id\" WHERE \"event\".\"status\" = 'published' ORDER BY \"event\".\"starts\" DESC LIMIT 1;\r\noms-statutory_1             | 2019-08-14T11:10:46.426Z [info]: \tGET /events/latest 304  - 63.980 ms, user veysellkoca with id 2670\r\n```\r\n\r\n**Describe the solution you'd like**\r\nSome flag to remove it, like `--no-container-names` or something simplier that would disable prepending it.\r\n\r\n**Describe alternatives you've considered**\r\nA workaround is to use `cut`, but it's ugly:\r\n\r\n```\r\ndocker-compose logs -f --tail=100 <service-name> | cut -f2 -d '|'\r\n```\r\n\r\n**Additional context**\r\nNone.\r\n\r\n\r\n-----\r\n\r\nEDIT: As @ndeloof suggested, this can work:\r\n\r\n```\r\ndocker-compose  ps -q <service> | xargs -I {} docker logs -f --tail=100 {}\r\n```\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/8444",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/8444/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/8444/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/8444/events",
      "html_url": "https://github.com/docker/compose/issues/8444",
      "id": 950982006,
      "node_id": "MDU6SXNzdWU5NTA5ODIwMDY=",
      "number": 8444,
      "title": "docker-compose.yml file disappeared.",
      "user": {
        "login": "Fooughhy",
        "id": 6977416,
        "node_id": "MDQ6VXNlcjY5Nzc0MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6977416?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fooughhy",
        "html_url": "https://github.com/Fooughhy",
        "followers_url": "https://api.github.com/users/Fooughhy/followers",
        "following_url": "https://api.github.com/users/Fooughhy/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fooughhy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Fooughhy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fooughhy/subscriptions",
        "organizations_url": "https://api.github.com/users/Fooughhy/orgs",
        "repos_url": "https://api.github.com/users/Fooughhy/repos",
        "events_url": "https://api.github.com/users/Fooughhy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Fooughhy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 69777235,
          "node_id": "MDU6TGFiZWw2OTc3NzIzNQ==",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/bug",
          "name": "kind/bug",
          "color": "fc2929",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-07-22T19:29:19Z",
      "updated_at": "2021-07-22T19:36:20Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!--\r\nWelcome to the docker-compose issue tracker! Before creating an issue, please heed the following:\r\n\r\n1. This tracker should only be used to report bugs and request features / enhancements to docker-compose\r\n    - For questions and general support, use https://forums.docker.com\r\n    - For documentation issues, use https://github.com/docker/docker.github.io\r\n    - For issues with the `docker stack` commands and the version 3 of the Compose file, use\r\n      https://github.com/docker/cli\r\n2. Use the search function before creating a new issue. Duplicates will be closed and directed to\r\n   the original discussion.\r\n3. When making a bug report, make sure you provide all required information. The easier it is for\r\n   maintainers to reproduce, the faster it'll be fixed.\r\n-->\r\n\r\n## Description of the issue\r\nI used \"docker-compose up\", interrupted the process in the final stages and now the docker-compose.yml file is gone. I've had the containers running for a couple of days, and was simply going to make some changes to them. I made the changes in the same terminal window (using the `micro` editor), saved and then tried doing \"docker-compose up\". It took some time in the final stage, where mariadb was being set up and as I saw there were trouble with the php config file, I interrupted with \"Ctrl + C\". Then the \"docker-compose.yml\" file I JUST used was gone.\r\n\r\n## Context information (for bug reports)\r\n```\r\nfoughman@raspberrypi:/opt/nextcloud $ docker-compose down\r\nRemoving nextcloud_app ... done\r\nRemoving nextcloud_db  ... done\r\nNetwork nextcloud-backend is external, skipping\r\nNetwork frontend is external, skipping\r\nfoughman@raspberrypi:/opt/nextcloud $ docker-compose up --build\r\nCreating nextcloud_db ... done\r\nCreating nextcloud_app ... done\r\nAttaching to nextcloud_db, nextcloud_app\r\ndb_1   | [s6-init] making user provided files available at /var/run/s6/etc...exited 0.\r\ndb_1   | [s6-init] ensuring user provided files have correct perms...exited 0.\r\ndb_1   | [fix-attrs.d] applying ownership & permissions fixes...\r\ndb_1   | [fix-attrs.d] done.\r\ndb_1   | [cont-init.d] executing container initialization scripts...\r\ndb_1   | [cont-init.d] 01-envfile: executing... \r\ndb_1   | [env-init] MYSQL_PASSWORD set from FILE__MYSQL_PASSWORD\r\ndb_1   | [env-init] MYSQL_ROOT_PASSWORD set from FILE__MYSQL_ROOT_PASSWORD\r\ndb_1   | [cont-init.d] 01-envfile: exited 0.\r\ndb_1   | [cont-init.d] 10-adduser: executing... \r\ndb_1   | \r\ndb_1   | -------------------------------------\r\ndb_1   |           _         ()\r\ndb_1   |          | |  ___   _    __\r\ndb_1   |          | | / __| | |  /  \\ \r\ndb_1   |          | | \\__ \\ | | | () |\r\ndb_1   |          |_| |___/ |_|  \\__/\r\ndb_1   | \r\ndb_1   | \r\ndb_1   | Brought to you by linuxserver.io\r\ndb_1   | -------------------------------------\r\ndb_1   | \r\ndb_1   | To support LSIO projects visit:\r\ndb_1   | https://www.linuxserver.io/donate/\r\ndb_1   | -------------------------------------\r\ndb_1   | GID/UID\r\ndb_1   | -------------------------------------\r\ndb_1   | \r\ndb_1   | User uid:    1000\r\ndb_1   | User gid:    1000\r\ndb_1   | -------------------------------------\r\ndb_1   | \r\ndb_1   | [cont-init.d] 10-adduser: exited 0.\r\ndb_1   | [cont-init.d] 30-config: executing... \r\ndb_1   | [cont-init.d] 30-config: exited 0.\r\ndb_1   | [cont-init.d] 40-initialise-db: executing... \r\ndb_1   | Setting Up Initial Databases\r\ndb_1   | Installing MariaDB/MySQL system tables in '/config/databases' ...\r\ndb_1   | 2021-07-22 20:36:14 3070171968 [Note] /usr/sbin/mysqld (mysqld 10.1.47-MariaDB-0ubuntu0.18.04.1) starting as process 299 ...\r\napp_1  | Initializing nextcloud 21.0.1.1 ...\r\ndb_1   | OK\r\ndb_1   | Filling help tables...\r\ndb_1   | 2021-07-22 20:36:40 3069811520 [Note] /usr/sbin/mysqld (mysqld 10.1.47-MariaDB-0ubuntu0.18.04.1) starting as process 328 ...\r\ndb_1   | OK\r\ndb_1   | Creating OpenGIS required SP-s...\r\ndb_1   | 2021-07-22 20:36:47 3069311808 [Note] /usr/sbin/mysqld (mysqld 10.1.47-MariaDB-0ubuntu0.18.04.1) starting as process 358 ...\r\ndb_1   | OK\r\ndb_1   | \r\ndb_1   | To start mysqld at boot time you have to copy\r\ndb_1   | support-files/mysql.server to the right place for your system\r\ndb_1   | \r\ndb_1   | PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !\r\ndb_1   | To do so, start the server, then issue the following commands:\r\ndb_1   | \r\ndb_1   | '/usr/bin/mysqladmin' -u root password 'new-password'\r\ndb_1   | '/usr/bin/mysqladmin' -u root -h 811aebbff192 password 'new-password'\r\ndb_1   | \r\ndb_1   | Alternatively you can run:\r\ndb_1   | '/usr/bin/mysql_secure_installation'\r\ndb_1   | \r\ndb_1   | which will also give you the option of removing the test\r\ndb_1   | databases and anonymous user created by default.  This is\r\ndb_1   | strongly recommended for production servers.\r\ndb_1   | \r\ndb_1   | See the MariaDB Knowledgebase at http://mariadb.com/kb or the\r\ndb_1   | MySQL manual for more instructions.\r\ndb_1   | \r\ndb_1   | You can start the MariaDB daemon with:\r\ndb_1   | cd '/usr' ; /usr/bin/mysqld_safe --datadir='/config/databases'\r\ndb_1   | \r\ndb_1   | You can test the MariaDB daemon with mysql-test-run.pl\r\ndb_1   | cd '/usr/mysql-test' ; perl mysql-test-run.pl\r\ndb_1   | \r\ndb_1   | Please report any problems at http://mariadb.org/jira\r\ndb_1   | \r\ndb_1   | The latest information about MariaDB is available at http://mariadb.org/.\r\ndb_1   | You can find additional information about the MySQL part at:\r\ndb_1   | http://dev.mysql.com\r\ndb_1   | Consider joining MariaDB's strong and vibrant community:\r\ndb_1   | https://mariadb.org/get-involved/\r\ndb_1   | \r\ndb_1   | 2021-07-22 20:36:52 3069438784 [Note] mysqld (mysqld 10.1.47-MariaDB-0ubuntu0.18.04.1) starting as process 386 ...\r\ndb_1   | Database Setup Completed\r\ndb_1   | [cont-init.d] 40-initialise-db: exited 0.\r\ndb_1   | [cont-init.d] 99-custom-scripts: executing... \r\ndb_1   | [custom-init] no custom files found exiting...\r\ndb_1   | [cont-init.d] 99-custom-scripts: exited 0.\r\ndb_1   | [cont-init.d] done.\r\ndb_1   | [services.d] starting services\r\ndb_1   | [services.d] done.\r\ndb_1   | 210722 20:37:00 mysqld_safe Logging to syslog.\r\ndb_1   | 210722 20:37:00 mysqld_safe Starting mysqld daemon with databases from /config/databases\r\napp_1  | Initializing finished\r\napp_1  | New nextcloud instance\r\napp_1  | Installing with MySQL database\r\napp_1  | starting nextcloud installation\r\napp_1  | Cannot write into \"config\" directory!\r\napp_1  | This can usually be fixed by giving the webserver write access to the config directory\r\napp_1  | \r\napp_1  | Or, if you prefer to keep config.php file read only, set the option \"config_is_read_only\" to true in it.\r\napp_1  | See https://docs.nextcloud.com/server/21/go.php?to=admin-config\r\napp_1  | setting trusted domains…\r\napp_1  | Cannot write into \"config\" directory!\r\napp_1  | This can usually be fixed by giving the webserver write access to the config directory\r\napp_1  | \r\napp_1  | Or, if you prefer to keep config.php file read only, set the option \"config_is_read_only\" to true in it.\r\napp_1  | See https://docs.nextcloud.com/server/21/go.php?to=admin-config\r\napp_1  | [22-Jul-2021 20:38:08] NOTICE: fpm is running, pid 1\r\napp_1  | [22-Jul-2021 20:38:08] NOTICE: ready to handle connections\r\n^CGracefully stopping... (press Ctrl+C again to force)\r\nStopping nextcloud_app ... done\r\nStopping nextcloud_db  ... done\r\nfoughman@raspberrypi:/opt/nextcloud $ docker pull\r\n\"docker pull\" requires exactly 1 argument.\r\nSee 'docker pull --help'.\r\n\r\nUsage:  docker pull [OPTIONS] NAME[:TAG|@DIGEST]\r\n\r\nPull an image or a repository from a registry\r\nfoughman@raspberrypi:/opt/nextcloud $ docker-compose pull\r\nERROR: \r\n        Can't find a suitable configuration file in this directory or any\r\n        parent. Are you in the right directory?\r\n\r\n        Supported filenames: docker-compose.yml, docker-compose.yaml\r\n        \r\nfoughman@raspberrypi:/opt/nextcloud $ ls\r\n```\r\n**Output of `docker-compose version`**\r\n```\r\n\r\ndocker-compose version 1.21.0, build unknown\r\ndocker-py version: 3.4.1\r\nCPython version: 3.7.3\r\nOpenSSL version: OpenSSL 1.1.1d  10 Sep 2019\r\n```\r\n/!\\ If `docker-compose version` reports v2.0...` you're using the wrong repository, please report issues on [Compose-CLI](https://github.com/docker/compose-cli/issues/new)\r\n\r\n**Output of `docker version`**\r\n```\r\nClient: Docker Engine - Community\r\n Version:           20.10.7\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        f0df350\r\n Built:             Wed Jun  2 11:57:27 2021\r\n OS/Arch:           linux/arm\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.7\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       b0f5bc3\r\n  Built:            Wed Jun  2 11:55:25 2021\r\n  OS/Arch:          linux/arm\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.6\r\n  GitCommit:        d71fcd7d8303cbf684402823e425e9dd2e99285d\r\n runc:\r\n  Version:          1.0.0-rc95\r\n  GitCommit:        b9ee9c6314599f1b4a7f497e1f1f856fe433d3b7\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n\r\n```\r\n\r\n**Output of `docker-compose config`**\r\n(Make sure to add the relevant `-f` and other flags)\r\n```\r\nERROR: \r\n        Can't find a suitable configuration file in this directory or any\r\n        parent. Are you in the right directory?\r\n\r\n        Supported filenames: docker-compose.yml, docker-compose.yaml\r\n```\r\n\r\n\r\n## Steps to reproduce the issue\r\n\r\n1. Have read-only/wrong permissions for /config/ directory (in container?)?\r\n2. Use `docker-compose up`\r\n3. Abort in the final stages\r\n4. docker-compose.yml gone\r\n\r\n## Additional information\r\n\r\nRaspberry Pi 4; \r\nOS: Raspbian GNU/Linux 10 (buster) armv7l \r\nHost: Raspberry Pi 4 Model B Rev 1.4 \r\nKernel: 5.10.17-v7l+ \r\nUptime: 31 mins \r\nPackages: 2389 (dpkg), 4 (snap) \r\nShell: bash 5.0.3 \r\nResolution: 1736x1305 \r\nDE: LXDE \r\nWM: Openbox \r\nTheme: Adwaita [GTK3] \r\nIcons: Adwaita [GTK3] \r\nTerminal: lxterminal \r\nTerminal Font: Monospace 10 \r\nCPU: BCM2711 (4) @ 1.500GHz \r\nMemory: 1129MiB / 3827MiB\r\n",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/docker/compose/issues/318",
      "repository_url": "https://api.github.com/repos/docker/compose",
      "labels_url": "https://api.github.com/repos/docker/compose/issues/318/labels{/name}",
      "comments_url": "https://api.github.com/repos/docker/compose/issues/318/comments",
      "events_url": "https://api.github.com/repos/docker/compose/issues/318/events",
      "html_url": "https://github.com/docker/compose/issues/318",
      "id": 37799766,
      "node_id": "MDU6SXNzdWUzNzc5OTc2Ng==",
      "number": 318,
      "title": "feature: including external docker-compose.yml",
      "user": {
        "login": "dnephin",
        "id": 442180,
        "node_id": "MDQ6VXNlcjQ0MjE4MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/442180?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dnephin",
        "html_url": "https://github.com/dnephin",
        "followers_url": "https://api.github.com/users/dnephin/followers",
        "following_url": "https://api.github.com/users/dnephin/following{/other_user}",
        "gists_url": "https://api.github.com/users/dnephin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dnephin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dnephin/subscriptions",
        "organizations_url": "https://api.github.com/users/dnephin/orgs",
        "repos_url": "https://api.github.com/users/dnephin/repos",
        "events_url": "https://api.github.com/users/dnephin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dnephin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 190714435,
          "node_id": "MDU6TGFiZWwxOTA3MTQ0MzU=",
          "url": "https://api.github.com/repos/docker/compose/labels/kind/enhancement",
          "name": "kind/enhancement",
          "color": "5319e7",
          "default": false,
          "description": null
        },
        {
          "id": 237987771,
          "node_id": "MDU6TGFiZWwyMzc5ODc3NzE=",
          "url": "https://api.github.com/repos/docker/compose/labels/status/0-triage",
          "name": "status/0-triage",
          "color": "ededed",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 70,
      "created_at": "2014-07-14T15:58:40Z",
      "updated_at": "2021-06-07T20:25:04Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "### The Problem\n\nI'd like to use fig for acceptance testing of services\n\nIn the case of a single service with a single level of dependencies this is easy (ex: a webapp with a database). As soon as the dependency tree grows to depth > 1, it gets more complicated (ex: service-a requires service-b which requires a database). Currently I'd have to specify the service dependency tree in each `fig.yml`.  This is not ideal because as the tree grows, we end up with a lot of duplication, and having to update a few different `fig.yml`'s in different projects when a service adds/changes a dependency is not great.\n### Proposed Solution\n\nSupport an `include` section in the `fig.yml` which contains url/paths to other `fig.yml` files. These files would be included in a `Project` so that the top-level `fig.yaml` can refer to them using `<proejct>_<service>`.\n#### Example config\n\n``` yaml\ninclude:\n    # link using http\n    servicea:\n        http: http://localhost:8080/projects/servicea/fig.yml\n    # local paths\n    serviceb:\n        path: ../projects/serviceb/fig.yml\n\nwebapp:\n    ...\n    links:\n        - servicea_webapp\n        - serviceb_webapp\n```\n",
      "performed_via_github_app": null,
      "score": 1.0
    }
  ]
}